{"version":3,"file":"js/6589.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/ActionGroup.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/c_form_m_limit_width_MaxWidth.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/Form.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/FormSection.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/FormAlert.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/FormFieldGroupToggle.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/InternalFormFieldGroup.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/FormFieldGroup.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/FormFieldGroupExpandable.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/FormFieldGroupHeader.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Form/FormContext.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form.mjs';\nimport { css } from '@patternfly/react-styles';\nexport const ActionGroup = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    const customClassName = css(styles.formGroup, styles.modifiers.action, className);\n    const formActionsComponent = React.createElement(\"div\", { className: css(styles.formActions) }, children);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: customClassName }),\n        React.createElement(\"div\", { className: css(styles.formGroupControl) }, formActionsComponent)));\n};\nActionGroup.displayName = 'ActionGroup';\n//# sourceMappingURL=ActionGroup.js.map","export const c_form_m_limit_width_MaxWidth = {\n  \"name\": \"--pf-v5-c-form--m-limit-width--MaxWidth\",\n  \"value\": \"55rem\",\n  \"var\": \"var(--pf-v5-c-form--m-limit-width--MaxWidth)\"\n};\nexport default c_form_m_limit_width_MaxWidth;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form.mjs';\nimport { css } from '@patternfly/react-styles';\nimport cssMaxWidth from '@patternfly/react-tokens/dist/esm/c_form_m_limit_width_MaxWidth';\nconst FormBase = (_a) => {\n    var { children = null, className = '', isHorizontal = false, isWidthLimited = false, maxWidth = '', innerRef } = _a, props = __rest(_a, [\"children\", \"className\", \"isHorizontal\", \"isWidthLimited\", \"maxWidth\", \"innerRef\"]);\n    return (React.createElement(\"form\", Object.assign({ noValidate: true }, (maxWidth && {\n        style: Object.assign({ [cssMaxWidth.name]: maxWidth }, props.style)\n    }), props, { className: css(styles.form, isHorizontal && styles.modifiers.horizontal, (isWidthLimited || maxWidth) && styles.modifiers.limitWidth, className), ref: innerRef }), children));\n};\nexport const Form = React.forwardRef((props, ref) => React.createElement(FormBase, Object.assign({ innerRef: ref }, props)));\nForm.displayName = 'Form';\n//# sourceMappingURL=Form.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form.mjs';\nimport { css } from '@patternfly/react-styles';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nexport const FormSection = (_a) => {\n    var { className = '', children, title = '', titleElement: TitleElement = 'div' } = _a, props = __rest(_a, [\"className\", \"children\", \"title\", \"titleElement\"]);\n    return (React.createElement(GenerateId, { prefix: \"pf-form-section-title\" }, (sectionId) => (React.createElement(\"section\", Object.assign({ className: css(styles.formSection, className), role: \"group\" }, (title && { 'aria-labelledby': sectionId }), props),\n        title && (React.createElement(TitleElement, { id: sectionId, className: css(styles.formSectionTitle, className) }, title)),\n        children))));\n};\nFormSection.displayName = 'FormSection';\n//# sourceMappingURL=FormSection.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Form/form.mjs';\nexport const FormAlert = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (\n    // There are currently no associated styles with the pf-v5-c-form_alert class.\n    // Therefore, it does not exist in react-styles\n    React.createElement(\"div\", Object.assign({}, props, { className: css(`${styles.form}__alert`, className) }), children));\n};\nFormAlert.displayName = 'FormAlert';\n//# sourceMappingURL=FormAlert.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form.mjs';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { Button } from '../Button';\nexport const FormFieldGroupToggle = (_a) => {\n    var { className, onToggle, isExpanded, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledby, toggleId } = _a, props = __rest(_a, [\"className\", \"onToggle\", \"isExpanded\", 'aria-label', 'aria-labelledby', \"toggleId\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.formFieldGroupToggle, className) }, props),\n        React.createElement(\"div\", { className: css(styles.formFieldGroupToggleButton) },\n            React.createElement(Button, { variant: \"plain\", \"aria-label\": ariaLabel, onClick: onToggle, \"aria-expanded\": isExpanded, \"aria-labelledby\": ariaLabelledby, id: toggleId },\n                React.createElement(\"span\", { className: css(styles.formFieldGroupToggleIcon) },\n                    React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" }))))));\n};\nFormFieldGroupToggle.displayName = 'FormFieldGroupToggle';\n//# sourceMappingURL=FormFieldGroupToggle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form.mjs';\nimport { css } from '@patternfly/react-styles';\nimport { FormFieldGroupToggle } from './FormFieldGroupToggle';\nimport { GenerateId } from '../../helpers';\nexport const InternalFormFieldGroup = (_a) => {\n    var { children, className, header, isExpandable, isExpanded, onToggle, toggleAriaLabel } = _a, props = __rest(_a, [\"children\", \"className\", \"header\", \"isExpandable\", \"isExpanded\", \"onToggle\", \"toggleAriaLabel\"]);\n    const headerTitleText = header ? header.props.titleText : null;\n    if (isExpandable && !toggleAriaLabel && !headerTitleText) {\n        // eslint-disable-next-line no-console\n        console.error('FormFieldGroupExpandable:', 'toggleAriaLabel or the titleText prop of FormFieldGroupHeader is required to make the toggle button accessible');\n    }\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.formFieldGroup, isExpanded && isExpandable && styles.modifiers.expanded, className), role: \"group\" }, (headerTitleText && { 'aria-labelledby': `${header.props.titleText.id}` }), props),\n        isExpandable && (React.createElement(GenerateId, { prefix: \"form-field-group-toggle\" }, (id) => (React.createElement(FormFieldGroupToggle, Object.assign({ onToggle: onToggle, isExpanded: isExpanded, \"aria-label\": toggleAriaLabel, toggleId: id }, (headerTitleText && { 'aria-labelledby': `${header.props.titleText.id} ${id}` })))))),\n        header && header,\n        (!isExpandable || (isExpandable && isExpanded)) && (React.createElement(\"div\", { className: css(styles.formFieldGroupBody) }, children))));\n};\nInternalFormFieldGroup.displayName = 'InternalFormFieldGroup';\n//# sourceMappingURL=InternalFormFieldGroup.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { InternalFormFieldGroup } from './InternalFormFieldGroup';\nexport const FormFieldGroup = (_a) => {\n    var { children, className, header } = _a, props = __rest(_a, [\"children\", \"className\", \"header\"]);\n    return (React.createElement(InternalFormFieldGroup, Object.assign({ className: className, header: header }, props), children));\n};\nFormFieldGroup.displayName = 'FormFieldGroup';\n//# sourceMappingURL=FormFieldGroup.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { InternalFormFieldGroup } from './InternalFormFieldGroup';\nexport const FormFieldGroupExpandable = (_a) => {\n    var { children, className, header, isExpanded = false, toggleAriaLabel } = _a, props = __rest(_a, [\"children\", \"className\", \"header\", \"isExpanded\", \"toggleAriaLabel\"]);\n    const [localIsExpanded, setIsExpanded] = useState(isExpanded);\n    return (React.createElement(InternalFormFieldGroup, Object.assign({ className: className, header: header, isExpandable: true, isExpanded: localIsExpanded, toggleAriaLabel: toggleAriaLabel, onToggle: () => setIsExpanded(!localIsExpanded) }, props), children));\n};\nFormFieldGroupExpandable.displayName = 'FormFieldGroupExpandable';\n//# sourceMappingURL=FormFieldGroupExpandable.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Form/form.mjs';\nimport { css } from '@patternfly/react-styles';\nexport const FormFieldGroupHeader = (_a) => {\n    var { className, titleText, titleDescription, actions } = _a, props = __rest(_a, [\"className\", \"titleText\", \"titleDescription\", \"actions\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.formFieldGroupHeader, className) }, props),\n        React.createElement(\"div\", { className: css(styles.formFieldGroupHeaderMain) },\n            titleText && (React.createElement(\"div\", { className: css(styles.formFieldGroupHeaderTitle) },\n                React.createElement(\"div\", { className: css(styles.formFieldGroupHeaderTitleText), id: titleText.id }, titleText.text))),\n            titleDescription && React.createElement(\"div\", { className: css(styles.formFieldGroupHeaderDescription) }, titleDescription)),\n        React.createElement(\"div\", { className: css(styles.formFieldGroupHeaderActions) }, actions && actions)));\n};\nFormFieldGroupHeader.displayName = 'FormFieldGroupHeader';\n//# sourceMappingURL=FormFieldGroupHeader.js.map","import { __rest } from \"tslib\";\nimport React from 'react';\nconst FormContext = React.createContext({});\nexport const FormContextConsumer = FormContext.Consumer;\nexport const FormContextProvider = ({ initialValues, children }) => {\n    var _a;\n    const [values, setValues] = React.useState(initialValues || {});\n    const [errors, setErrors] = React.useState({});\n    const [validators, setValidators] = React.useState({});\n    const [touched, setTouched] = React.useState({});\n    const isValid = ((_a = Object.keys(errors)) === null || _a === void 0 ? void 0 : _a.length) === 0;\n    const getValue = (fieldId) => Object.entries(values).reduce((acc, [id, value]) => (id === fieldId ? value : acc), '');\n    const setValue = (fieldId, value, triggerValidation = true) => {\n        var _a;\n        if (values[fieldId] !== value) {\n            setValues((prevValues) => (Object.assign(Object.assign({}, prevValues), { [fieldId]: value })));\n            triggerValidation && ((_a = validators[fieldId]) === null || _a === void 0 ? void 0 : _a.call(validators, value));\n        }\n    };\n    const getError = (fieldId) => Object.entries(errors).reduce((acc, [id, error]) => (id === fieldId ? error : acc), '');\n    const setError = (fieldId, error) => errors[fieldId] !== error &&\n        setErrors((_a) => {\n            var _b = fieldId, _ = _a[_b], prevErrors = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n            return (Object.assign(Object.assign({}, prevErrors), (!!error && { [fieldId]: error })));\n        });\n    const isTouched = (fieldId) => Object.entries(touched).reduce((acc, [id, isTouched]) => (id === fieldId ? isTouched : acc), false);\n    const setFieldTouched = (fieldId, isTouched) => touched[fieldId] !== isTouched &&\n        setTouched((_a) => {\n            var _b = fieldId, _ = _a[_b], prevTouched = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\n            return (Object.assign(Object.assign({}, prevTouched), (isTouched && { [fieldId]: isTouched })));\n        });\n    const setValidator = (fieldId, validate) => validators[fieldId] !== validate && setValidators((prevValidators) => (Object.assign(Object.assign({}, prevValidators), { [fieldId]: validate })));\n    // Accumulate and return errors from all fields with validators.\n    const validate = () => {\n        var _a;\n        return (_a = Object.entries(validators)) === null || _a === void 0 ? void 0 : _a.reduce((acc, [id, validateField]) => {\n            const fieldError = validateField(values[id]);\n            if (fieldError) {\n                acc[id] = fieldError;\n            }\n            return acc;\n        }, {});\n    };\n    return (React.createElement(FormContext.Provider, { value: {\n            values,\n            errors,\n            touched,\n            isValid,\n            setValues,\n            setErrors,\n            getValue,\n            setValue,\n            getError,\n            setError,\n            validate,\n            setValidator,\n            isTouched,\n            setTouched: setFieldTouched\n        } }, typeof children === 'function' ? (React.createElement(FormContext.Consumer, null, (formContext) => children(formContext))) : (children)));\n};\nFormContextProvider.displayName = 'FormContextProvider';\nexport const useFormContext = () => React.useContext(FormContext);\n//# sourceMappingURL=FormContext.js.map"],"names":["ActionGroup","_a","children","className","props","__rest","customClassName","formGroup","modifiers","action","formActionsComponent","formActions","Object","assign","formGroupControl","displayName","FormBase","isHorizontal","isWidthLimited","maxWidth","innerRef","noValidate","style","form","horizontal","limitWidth","ref","Form","FormSection","title","titleElement","TitleElement","prefix","sectionId","formSection","role","id","formSectionTitle","FormAlert","FormFieldGroupToggle","onToggle","isExpanded","ariaLabel","ariaLabelledby","toggleId","formFieldGroupToggle","formFieldGroupToggleButton","Button","variant","onClick","formFieldGroupToggleIcon","InternalFormFieldGroup","header","isExpandable","toggleAriaLabel","headerTitleText","titleText","console","error","formFieldGroup","expanded","GenerateId","formFieldGroupBody","FormFieldGroup","FormFieldGroupExpandable","localIsExpanded","setIsExpanded","useState","FormFieldGroupHeader","titleDescription","actions","formFieldGroupHeader","formFieldGroupHeaderMain","formFieldGroupHeaderTitle","formFieldGroupHeaderTitleText","text","formFieldGroupHeaderDescription","formFieldGroupHeaderActions","FormContext","FormContextConsumer","Consumer","FormContextProvider","initialValues","values","setValues","errors","setErrors","validators","setValidators","touched","setTouched","isValid","keys","length","Provider","value","getValue","fieldId","entries","reduce","acc","setValue","triggerValidation","prevValues","call","getError","setError","_b","prevErrors","validate","validateField","fieldError","setValidator","prevValidators","isTouched","prevTouched","formContext","useFormContext"],"sourceRoot":""}