{"version":3,"file":"js/1456.xxxxxxxxxxxxxxxxxxxx.js","mappings":"4IAacA,EAw6CAC,E,kCAx6Cd,SAAcD,GA4qBZ,SAASE,IACP,OAAO,KACG,CACNC,UAAWC,IACXC,QAASC,IAAyBC,WAAWC,WAC7CC,aAAc,OACdC,GAAIN,IAAgBG,WAAWC,WAC/BG,KAAM,OACNC,QAASN,IAAyBC,WAAWC,aAE9CK,WACL,CAEA,SAASC,IACP,OAAO,KACG,CACNL,aAAc,OACdC,GAAIN,MAELS,WACL,CAEA,SAASE,IACP,OAAO,KACG,CACNZ,UAAWC,IACXK,aAAc,OACdO,YAAa,KAAQC,KAAyBV,WAAWC,WACzDE,GAAIN,IAAgBG,WAAWC,WAC/BG,KAAM,SAEPE,WACL,CAeA,SAASK,IACP,OAAO,KACG,CACNC,WAAY,KACFC,KACPb,WACAC,aAEJK,WACL,CAEA,SAASQ,IACP,OAAO,KACG,CACNC,SAAU,OAAWf,WAAWC,WAChCe,SAAU,OAAWhB,WAAWC,aAEjCK,WACL,CAEA,SAASW,IACP,OAAO,KACG,CACNC,QAAS,KAAQC,KAAgCnB,WAAWC,WAC5DmB,UAAW,KAAQC,KAA8BrB,WAAWC,WAC5DqB,OAAQC,IAAkBvB,WAAWC,WACrCL,UAAWC,IACXC,QAASC,IAAyBC,WAAWC,WAC7CuB,iBAAkB,OAAYxB,WAAWC,WACzCC,aAAc,OACdC,GAAIN,IAAgBG,WAAWC,WAC/BI,QAASN,IAAyBC,WAAWC,aAE9CK,WACL,CAEA,SAASa,IACP,OAAO,KACG,CACNrB,QAASC,IAAyBC,WAAWC,WAC7CwB,SAAUC,IAAoB1B,WAAWC,WACzCE,GAAIwB,IAAiC3B,WAAWC,aAEjDK,WACL,CAEA,SAASqB,IACP,OAAO,KACG,CACNC,gBAAiB/B,IACjBgC,WAAYhC,MAEbS,WACL,CAEA,SAASiB,IACP,OAAO,KACG,CACNzB,QAASC,IAAyBC,WAAWC,WAC7CC,aAAc,OACdC,GAAIN,IAAgBG,WAAWC,WAC/BG,KAAM,OACNC,QAASN,IAAyBC,WAAWC,aAE9CK,WACL,CAEA,SAASwB,IACP,OAAO,KACG,CACNC,aAAc,KAAQvB,KAA2BR,WAAWC,WAC5DC,aAAc,OACdC,GAAIN,IAAgBG,WAAWC,WAC/BG,KAAM,SAEPE,WACL,CAEA,SAAS0B,IACP,OAAO,KACG,CACND,aAAc,KACJpB,KACPX,WACAC,aAEJK,WACL,CAEA,SAAS2B,IACP,OAAO,KACG,CACNC,oBAAqBpB,IAClBd,WACAC,WACHkC,uBAAwB,OACxBC,OAAQ,KAAS,QAAYpC,WAAWC,WACxCoC,YAAa,OAAWrC,WAAWC,WACnCqC,IAAK,SAENhC,WACL,CAsCA,SAASiC,IACP,OAAO,KACG,CACNjB,OAAQ,OAAWtB,WAAWC,WAC9BH,QAASC,IAAyBC,WAAWC,WAC7CuC,YAAa,OAAWxC,WAAWC,WACnCE,GAAIN,IAAgBG,WAAWC,WAC/BwC,KAAM,OACNC,OAAQ,OAAW1C,WAAWC,WAC9B0C,MAAO,OAAW3C,WAAWC,aAE9BK,WACL,CAEA,SAASoB,IACP,OAAO,KACG,CACN5B,QAASC,IAAyBC,WAAWC,WAC7CuC,YAAa,OACbI,QAAS,OAAY5C,WAAWC,WAChCE,GAAIN,IAAgBG,WAAWC,WAC/BG,KAAM,OACNyC,WAAYC,IAA8B9C,WAAWC,WACrD8C,cAAe,OAAWC,MAAMhD,WAAWC,WAC3CgD,OAAQC,IAA0BlD,WAAWC,WAC7CkD,SAAU,OAAWnD,WAAWC,WAChCmD,KAAMC,IAAwBrD,WAAWC,WACzCI,QAASN,IAAyBC,WAAWC,aAE9CK,WACL,CAEA,SAASgD,IACP,OAAO,KACG,CACNxD,QAASC,IAAyBC,WAAWC,WAC7CuC,YAAa,OACbI,QAAS,OAAY5C,WAAWC,WAChCQ,YAAa,KAAQ,QAAYT,WAAWC,WAC5CsD,8CAA+C,KACtCzB,KACN9B,WACAC,WACHE,GAAIN,IAAgBG,WAAWC,WAC/BG,KAAM,OACNyC,WAAY,KACH,CACLZ,IACAuB,IACAC,IACAC,MAED1D,WACAC,WACH8C,cAAe,OAAWC,MAAMhD,WAAWC,WAC3CgD,OAAQU,IAA6B3D,WAAWC,WAChDkD,SAAU,OAAWnD,WAAWC,WAChCmD,KAAMQ,IACNvD,QAASN,IAAyBC,WAAWC,aAE9CK,WACL,CAYA,SAASwC,IACP,OAAO,MACT,CAMA,SAASI,IACP,OAAO,KAAO,CACZ,QACA,UACA,MACA,eACA,WACA,UAEJ,CAEA,SAASS,IACP,OAAO,KAAO,CACZ,WACA,SACA,MACA,eACA,QACA,WAEJ,CAUA,SAASN,IACP,OAAO,KAAO,CACZ,UACA,QACA,SACA,qBACA,UACA,aAEJ,CAEA,SAASO,IACP,OAAO,KAAO,CACZ,UACA,QACA,SACA,qBACA,WAEJ,CAEA,SAASC,IACP,OAAO,KAAO,CAAC,OAAQ,QAAS,YAAa,gBAC/C,CAEA,SAASC,IACP,OAAO,KACG,CACN5C,QAAS,KAAQ6C,KACjBC,YAAa,OACb1C,OAAQ,OACRxB,QAASC,IACTkE,WAAY,OACZ9D,GAAIN,IACJqE,QAAS,OAAWlE,WAAWC,aAEhCK,WACL,CAEA,SAASyD,IACP,OAAO,KACG,CACNI,QAAS,KAAS,QAAanE,WAAWC,WAC1CmE,YAAavE,IAAgBG,WAAWC,WACxCoE,kBAAmB,OAAWrE,WAAWC,WACzCqE,cAAejB,IACflD,GAAIN,IACJoD,OAAQsB,MAETjE,WACL,CAEA,SAASiE,IACP,OAAO,KAAO,CAAC,OAAQ,UAAW,aAAc,SAAU,WAC5D,CAEA,SAASC,IACP,OAAO,KACG,CACNR,YAAarE,IAAuBK,WAAWC,WAC/CwE,eAAgB5E,IAChB2C,YAAa,OAAWxC,WAAWC,WACnCC,aAAc,OACdwE,qBAAsB,OAAW1E,WAAWC,WAC5CE,GAAIN,IAAgBG,WAAWC,WAC/BG,KAAM,OACNuE,iDAAkD,OAE/C3E,WACAC,WACH2E,sBAAuB,OAAY5E,WAAWC,WAC9C4E,oBAAqB,OAAY7E,WAAWC,WAC5C6E,QAAS,OAAY9E,WAAWC,aAEjCK,WACL,CAEA,SAASe,IACP,OAAO,KACG,CACNvB,QAASC,IAAyBC,WAAWC,WAC7CgE,WAAYO,IAAqBxE,WAAWC,WAC5CE,GAAI4E,IAA+B/E,WAAWC,aAE/CK,WACL,CAEA,SAASyE,IACP,OAAO,KACG,CACNnD,gBAAiB/B,IACjBmF,YAAanF,MAEdS,WACL,CAEA,SAASI,IACP,OAAO,KACG,CACNsD,YAAa,MACL,IAAMxD,MACXR,WACAC,WACHuC,YAAa,OAAWxC,WAAWC,WACnCC,aAAc,OACdC,GAAIN,IAAgBG,WAAWC,WAC/BG,KAAM,SAEPE,WACL,CAEA,SAASO,IACP,OAAO,KACG,CACNoE,uBAAwB,KAAS,QAAajF,WAAWC,WACzDiF,eAAgB,OAAYlF,WAAWC,WACvCkF,mBAAoB,OAAYnF,WAAWC,aAE5CK,WACL,CA0BA,SAAS8E,IACP,OAAO,KAAO,CAAC,MAAO,OAAQ,OAChC,CAoDA,SAASrF,IACP,OAAO,MACT,CAcA,SAASsF,IACP,OAAO,KACG,CACNC,MAAO,OAAWtC,QAEnB1C,WACL,CAEA,SAASiF,IACP,OAAO,KACG,CACNzF,QAASC,IAAyBC,WAAWC,WAC7CkE,QAAS,KAAS,QAAanE,WAAWC,WAC1C4B,WAAYhC,IAAgBG,WAAWC,WACvCuF,gBAAiB,OAAWxF,WAAWC,WACvCwF,aAAcpC,IAAwBrD,WAAWC,WACjDE,GAAIN,IAAgBG,WAAWC,WAC/ByF,eAAgB,OAAW1C,MAC3BC,OAAQ0C,MAETrF,WACL,CAEA,SAASqF,IACP,OAAO,KAAO,CACZ,kBACA,kBACA,aACA,OACA,WAEJ,CAoDA,SAASjC,IACP,OAAO,KACG,CACNrB,YAAa,OACbuD,SAAUC,MAEXvF,WACL,CAMA,SAASuF,IACP,OAAO,KAAO,CAAC,WAAY,QAAS,UAAW,QACjD,CA6CA,SAASC,IACP,OAAO,KAAO,CAAC,KAAM,eACvB,CAEA,SAASC,IACP,OAAO,KAAO,CAAC,UAAW,QAAS,UACrC,CAEA,SAASvC,IACP,OAAO,KACG,CACNwC,QAASnG,IAAgBG,WAAWC,WACpCgG,kBAAmB,OAAYjG,WAAWC,WAC1CiG,WAAY,OAAYlG,WAAWC,aAEpCK,WACL,CAEA,SAAS6F,IACP,OAAO,KACG,CACNrG,QAASC,IAAyBC,WAAWC,WAC7CmG,KAAM,OACN5D,YAAa,OACbrC,GAAIN,IAAgBG,WAAWC,WAC/BG,KAAM,OACNC,QAASN,IAAyBC,WAAWC,aAE9CK,WACL,CAcA,SAAST,IACP,OAAO,MACT,CAgCA,SAAS4D,IACP,OAAO,KACG,CACNvB,oBAAqBpB,IAClBd,WACAC,WACHoG,qBAAsB,OAAWrG,WAAWC,WAC5CkC,uBAAwB,OACxBmE,OAAQlB,IACR/C,YAAa,OAAWrC,WAAWC,WACnCqC,IAAK,SAENhC,WACL,CAp5Ca,EAAAiG,iBAuoBJ,KACG,CACN9B,eAAgB5E,IAAgBG,WAAWC,WAC3CuG,KAAM,OAAWxG,WAAWC,aAE7BK,YAtoBQ,EAAAmG,sBA0oBJ,KACG,CACN7G,UAAWC,IACXK,aAAc,OACdE,KAAM,OACNsG,WAAY,OAAW1G,WAAWC,aAEnCK,YAzoBQ,EAAAqG,yBA6oBJ,KACG,CACN3C,YAAarE,IAAuBK,WAAWC,WAC/CwE,eAAgB5E,IAAgBG,WAAWC,WAC3C2G,cAAeT,IAAoBnG,WAAWC,WAC9C4G,iBAAkBhH,IAClBC,QAASC,IAAyBC,WAAWC,WAC7CE,GAAIN,IAAgBG,WAAWC,WAC/B6G,iBAAkBX,IAAoBnG,WAAWC,WACjD8G,oBAAqBlH,IACrBmH,kBAAmBjB,IACnB1F,QAASN,IAAyBC,WAAWC,aAE9CK,YA5oBQ,EAAA2G,YAActH,IAUd,EAAAuH,aAAe3G,IAMf,EAAA4G,eAAiB3G,IASjB,EAAA4G,gBAypBJ,KACG,CACNxH,UAAWC,IACXC,QAAS,OAAWE,WAAWC,WAC/BC,aAAc,OACdC,GAAIN,IAAgBG,WAAWC,WAC/BG,KAAM,OACNsG,WAAY,OAAW1G,WAAWC,aAEnCK,YAxpBQ,EAAA+G,yBAA2B1G,IAU3B,EAAA2G,uBAAyBxG,IAMzB,EAAAyG,cAAgBtG,IAahB,EAAAuG,oBAAsBrG,IAOtB,EAAAsG,sBAAwB9F,IAMxB,EAAA+F,OAASnG,IAST,EAAAoG,UAAY7F,IAQZ,EAAA8F,oBAAsB5F,IAUtB,EAAA6F,mBAAqB5F,IAcrB,EAAA6F,2BAgrBJ,KACG,CACNlI,UAAWC,IAAgBG,WAAWC,WACtC8H,YAAa,OAAW/H,WAAWC,WACnC+H,iCAAkC,OAAYhI,WAAWC,WACzDC,aAAc,OACd+H,aAAc,KAAQ,QAAYjI,WAAWC,WAC7CiI,eAAgB,KAAQ,QAAYlI,WAAWC,aAEhDK,YA9qBQ,EAAA6H,4BAkrBJ,KACG,CACNvI,UAAWC,IACXC,QAASC,IACTG,aAAc,OACdkI,UAAW,KAAQ,QACnB3H,YAAa,KAAQ,QACrBN,GAAIN,MAELS,YAhrBQ,EAAA+H,cAorBJ,KACG,CACNC,SAAUvI,IAAyBC,WAAWC,WAC9CsI,WAAYxI,IAAyBC,WAAWC,WAChDgD,OAAQ6C,MAETxF,YAnrBQ,EAAAkI,mBAAqBjG,IAWrB,EAAAkG,SAAW/G,IAeX,EAAAgH,YAAcpF,IA4Bd,EAAAqF,aAgsBJ,KACG,CACNvC,KAAM,KAAQ9C,KACdsF,MAAO,KAAS,QAChBC,KAAMxD,MAEP/E,YA7rBQ,EAAAwI,mBAAqBhG,IAGrB,EAAAiG,sBAksBJ,OA/rBI,EAAAC,eAAiB9F,IASjB,EAAA+F,kBAAoBtF,IASpB,EAAAuF,oBAusBJ,KACG,CACNC,QAAS,SAEV7I,YAtsBQ,EAAA8I,aAAe/F,IASf,EAAAgG,gBAAkBzF,IAQlB,EAAA0F,YAAczF,IAGd,EAAA0F,cAAgBzF,IAWhB,EAAA0F,oBAAsBzF,IAetB,EAAA0F,0BAA4BlF,IAQ5B,EAAAmF,UAAYlF,IAkBZ,EAAAmF,kBAAoBtI,IAOpB,EAAAuI,oBAAsB7E,IAMtB,EAAA8E,aAAenJ,IASf,EAAAoJ,uBAAyBjJ,IAYzB,EAAAkJ,oBAytBJ,KACG,CACNC,SAAUjK,IACVkK,OAAQ,OAAWjK,WAAWC,WAC9BiK,WAAYnK,MAEbO,YAxtBQ,EAAA6J,MA2tBb,SAASC,IACP,OAAO,KACG,CACNC,SAAU,KACD,MAAO,IAAMD,OACnBpK,WACAC,WACHqK,YAAa,OACbnK,GAAI,OACJC,KAAM,SAEPE,WACL,CAvuBqB8J,GAQR,EAAAG,SAAWnF,IAGX,EAAAoF,qBAmuBJ,KACG,CACN5D,cAAeT,IAAoBnG,WAAWC,WAC9C4G,iBAAkBhH,IAClBC,QAASC,IAAyBC,WAAWC,WAC7CgE,WAAYO,IAAqBxE,WAAWC,WAC5CwK,cAAe5K,IAAgBG,WAAWC,WAC1CE,GAAIN,IAAgBG,WAAWC,WAC/B6G,iBAAkBX,IAAoBnG,WAAWC,WACjD8G,oBAAqBlH,IACrBQ,QAASN,IAAyBC,WAAWC,aAE9CK,YAluBQ,EAAAoK,kCAsuBJ,KACG,CACNC,yBAA0B,OAC1BlG,eAAgB5E,IAChB2G,KAAM,SAEPlG,YApuBQ,EAAAsK,mBAwuBJ,KACG,CACNnG,eAAgB5E,IAChBM,GAAIN,IAAgBG,WAAWC,WAC/BuG,KAAM,SAEPlG,YAvuBQ,EAAAuK,wBA2uBJ,KACG,CACN9I,aAAc,KAAQxB,KACtBuK,SAAU,OACVC,MAAO,KAAQ,UAEhBzK,YA1uBQ,EAAA0K,UA8uBJ,OA3uBI,EAAAC,cAAgBlL,IAGhB,EAAAmL,UAgvBJ,OA7uBI,EAAAC,0BAivBJ,KACG,CACNC,OAAQ,KAAS,KAAQ,WAE1B9K,YA9uBQ,EAAA+K,KAAOhG,IAKP,EAAAiG,oBAAsB/F,IAiBtB,EAAAgG,mBAAqB5F,IAQrB,EAAA6F,kBAqvBJ,KACG,CACNpF,KAAM,KAAQnF,KACd2H,MAAO,KAAS,QAChBC,KAAMxD,MAEP/E,YAlvBQ,EAAAmL,uBAsvBJ,KACG,CACNrF,KAAM,KAAQ7D,KACdqG,MAAO,KAAS,QAChBC,KAAMxD,MAEP/E,YAnvBQ,EAAAoL,kBAuvBJ,KACG,CACNtF,KAAM,KAAQtC,KACd8E,MAAO,KAAS,QAChBC,KAAMxD,MAEP/E,YApvBQ,EAAAqL,cAwvBJ,KACG,CACNvF,KAAM,KAAQ5B,KACdoE,MAAO,KAAS,QAChBC,KAAMxD,MAEP/E,YArvBQ,EAAAsL,wBAyvBJ,KACG,CACNxF,KAAM,KAAQb,KACdqD,MAAO,KAAS,QAChBC,KAAMxD,MAEP/E,YAtvBQ,EAAAuL,uBAAyBnI,IAMzB,EAAAoI,kBA6vBJ,KAAO,CAAC,WAAY,QAAS,UAAW,SA1vBpC,EAAAC,qBAAuBlG,IAGvB,EAAAmG,2BA+vBJ,KACG,CACN9H,QAAS,OACT+H,SAAU,KAAQ,UAEnB3L,YA7vBQ,EAAA4L,wCAiwBJ,KACG,CACNC,mBAAoB,OACpBC,YAAa,SAEd9L,YA/vBQ,EAAA+L,oCAmwBJ,KACG,CACNC,SAAUzM,IAAgBG,WAAWC,WACrCmM,YAAa,SAEd9L,YAjwBQ,EAAAiM,WAqwBJ,KACG,CACNC,YAAa3I,IAAuB7D,WAAWC,aAEhDK,YApwBQ,EAAAmM,0BAwwBJ,KACG,CACNC,QAAS,KAAS1K,KAAgChC,WAAWC,aAE9DK,YAlwBQ,EAAAqM,OAAS7G,IAGT,EAAA8G,iBAAmB7G,IAGnB,EAAA8G,gCACXrJ,IAOW,EAAAsJ,SAAW3G,IAUX,EAAA4G,0BA6wBJ,KACG,CACNC,iBAAkB,OAClBjF,YAAa,OACbkF,IAAKlN,IAAyBC,WAAWC,WACzCgK,OAAQ,OACRiD,MAAOnN,IAAyBC,WAAWC,aAE5CK,YA5wBQ,EAAA6M,KAAOtN,IAGP,EAAAuN,yBAixBJ,KACG,CACNlN,aAAc,OAAWF,WAAWC,WACpCG,KAAM,OAAWJ,WAAWC,WAC5ByG,WAAY,OAAW1G,WAAWC,aAEnCK,YAhxBQ,EAAA+M,2BAoxBJ,KACG,CACNnN,aAAc,OAAWF,WAAWC,WACpCqN,gCAAiC,OAAYtN,WAAWC,WACxDgI,aAAc,KAAQ,QAAYjI,WAAWC,WAC7CiI,eAAgB,KAAQ,QAAYlI,WAAWC,aAEhDK,YAlxBQ,EAAAiN,+BAsxBJ,KACG,CACNC,iBAAkB,KAAQ,QAC1BC,YAAa,SAEdnN,YApxBQ,EAAAoN,qBAAuBjK,IAUvB,EAAAkK,gBA6xBJ,KACG,CACN3J,YAAa,OACb1C,OAAQ,OACRnB,GAAIN,IAAgBG,WAAWC,WAC/B2N,mBAAoB,OACpBC,WAAY,SAEbvN,YA5xBQ,EAAAwN,QAgyBJ,OAAWC,IAAI,GAAG/N,UAE5B,CAt6CD,CAAcP,IAAAA,EAAO,KAw6CrB,SAAcC,GAGZ,IAAcsO,EAqCAC,EA4BAC,EAgCAC,EAwCAC,EA4BAC,EA4BAC,EA4BAC,EA8BAC,EAkCAC,EAiGAC,EAyBAC,EA6EAC,EA4BAC,EAwDAC,EAgCAC,EA0BAC,EA6BAC,EAgIAC,EA8BAC,EA8BAC,EAqBAC,GAh2Bd,SAAcrB,GACZ,MAAMsB,EAAc,OAeP,EAAAC,cAAiBC,IAGrB,IAAAC,eAAc,OAFR,wDAGVC,YAFW,CAAC,GAGZtJ,KAAKoJ,EAAOG,MACZC,OAAO,CACNC,MAAO,CACL,IAAI,EAAAC,aACFrQ,EAAQ0I,4BACR,8BACA,KAEF,IAAI,EAAA2H,aAAaR,EAAa,UAAW,QAG5CS,OAEN,CAlCD,CAAc/B,EAAA,EAAAA,6CAAA,EAAAA,2CAA0C,KAqCxD,SAAcC,GACZ,MAAM+B,EAAc,KAAQvQ,EAAQ8H,eAUvB,EAAAgI,cAAiBC,IAC5B,MAAMS,EACJ,gGAAgGC,QAC9F,eACAV,EAAmB,WAAEW,YAGzB,OAAO,IAAAV,eAAc,MAAOQ,GACzBP,YAFW,CAAC,GAGZE,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAaE,EAAa,UAAW,QAElDD,OAAO,CAEb,CAzBD,CAAc9B,EAAA,EAAAA,sEAAA,EAAAA,oEAAmE,KA4BjF,SAAcC,GACC,KAAQ,QAArB,MAEM8B,EAAc,OAWP,EAAAT,cAAiBC,IAC5B,MAAMS,EACJ,iFAAiFC,QAC/E,oBACAV,EAAwB,gBAAEW,YAG9B,OAAO,IAAAV,eAAc,MAAOQ,GACzBP,YAFW,CAAC,GAGZtJ,KAAKoJ,EAAOG,MACZC,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAaE,EAAa,UAAW,QAElDD,OAAO,CAEb,CA7BD,CAAc7B,EAAA,EAAAA,oDAAA,EAAAA,kDAAiD,KAgC/D,SAAcC,GACZ,MAAM6B,EAAc,OAEdV,EAAc,OAEdc,EAAc,OAaP,EAAAb,cAAiBC,IAC5B,MAAMS,EACJ,4DAA4DC,QAC1D,OACAV,EAAW,GAAEW,YAGjB,OAAO,IAAAV,eAAc,MAAOQ,GACzBP,YAFW,CAAC,GAGZtJ,KAAKoJ,EAAOG,MACZC,OAAO,CACNC,MAAO,CACL,IAAI,EAAAC,aAAaE,EAAa,UAAW,KACzC,IAAI,EAAAF,aAAaR,EAAa,UAAW,KACzC,IAAI,EAAAQ,aAAaM,EAAa,UAAW,QAG5CL,OAAO,CAEb,CArCD,CAAc5B,EAAA,EAAAA,6CAAA,EAAAA,2CAA0C,KAwCxD,SAAcC,GACZ,MAAM4B,EAAc,OAUP,EAAAT,cAAiBC,IAC5B,MAAMS,EACJ,4DAA4DC,QAC1D,OACAV,EAAW,GAAEW,YAGjB,OAAO,IAAAV,eAAc,SAAUQ,GAC5BP,YAFW,CAAC,GAGZE,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAaE,EAAa,UAAW,QAElDD,OAAO,CAEb,CAzBD,CAAc3B,EAAA,EAAAA,6CAAA,EAAAA,2CAA0C,KA4BxD,SAAcC,GACZ,MAAM2B,EAAc,KAAQvQ,EAAQ8H,eAUvB,EAAAgI,cAAiBC,IAC5B,MAAMS,EACJ,0EAA0EC,QACxE,aACAV,EAAiB,SAAEW,YAGvB,OAAO,IAAAV,eAAc,MAAOQ,GACzBP,YAFW,CAAC,GAGZE,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAaE,EAAa,UAAW,QAElDD,OAAO,CAEb,CAzBD,CAAc1B,EAAA,EAAAA,sDAAA,EAAAA,oDAAmD,KA4BjE,SAAcC,GACO,OAUN,EAAAiB,cAAiBC,IAC5B,MAAMS,EACJ,6DAA6DC,QAC3D,eACAV,EAAmB,WAAEW,YAGzB,OAAO,IAAAV,eAAc,MAAOQ,GACzBP,YAFW,CAAC,GAGZE,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAarQ,EAAQiI,OAAQ,SAAU,QAEpDqI,OAAO,CAEb,CAzBD,CAAczB,EAAA,EAAAA,yCAAA,EAAAA,uCAAsC,KA4BpD,SAAcC,GACY,OAEL,OAWN,EAAAgB,cAAiBC,IAC5B,MAAMS,EACJ,4FACGC,QAAQ,oBAAqBV,EAAwB,gBAAEW,YACvDD,QAAQ,eAAgBV,EAAmB,WAAEW,YAElD,OAAO,IAAAV,eAAc,MAAOQ,GACzBP,YAFW,CAAC,GAGZE,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAarQ,EAAQwH,YAAa,cAAe,QAE9D8I,OAAO,CAEb,CA3BD,CAAcxB,EAAA,EAAAA,2DAAA,EAAAA,yDAAwD,KA8BtE,SAAcC,GACY,OAEL,OAEG,OAYT,EAAAe,cAAiBC,IAC5B,MAAMS,EACJ,uHACGC,QAAQ,oBAAqBV,EAAwB,gBAAEW,YACvDD,QAAQ,eAAgBV,EAAmB,WAAEW,YAC7CD,QAAQ,kBAAmBV,EAAsB,cAAEW,YAExD,OAAO,IAAAV,eAAc,MAAOQ,GACzBP,YAFW,CAAC,GAGZE,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAarQ,EAAQiK,UAAW,YAAa,QAE1DqG,OAAO,CAEb,CA/BD,CAAcvB,EAAA,EAAAA,wEAAA,EAAAA,sEAAqE,KAkCnF,SAAcC,GACG,KAAQ,QAEL,KAAQ,QAEL,KAAQ,QAEf,OAAWzL,MAEV,OAAWA,MAEP,OAAWA,MAEX,OAEJ,OAuBF,EAAAuM,cAAiBC,IAC5B,MACMa,EAAQ,CAAC,EAyCf,YAxCyBC,IAArBd,EAAe,SACjBa,EAAc,OAAIb,EAAe,aAGPc,IAAxBd,EAAkB,YACpBa,EAAiB,UAAIb,EAAkB,gBAGfc,IAAtBd,EAAgB,UAClBa,EAAe,QAAIb,EAAgB,cAGNc,IAA3Bd,EAAqB,eACvBa,EAAoB,aAAIb,EAAqB,mBAGvBc,IAApBd,EAAc,QAChBa,EAAa,MAAIb,EAAc,YAGRc,IAArBd,EAAe,SACjBa,EAAc,OAAIb,EAAe,aAGNc,IAAzBd,EAAmB,aACrBa,EAAkB,WAAIb,EAAmB,iBAGdc,IAAzBd,EAAmB,aACrBa,EAAkB,WAAIb,EAAmB,iBAGlBc,IAArBd,EAAe,SACjBa,EAAe,QAAIb,EAAe,aAGRc,IAAxBd,EAAkB,YACpBa,EAAiB,UAAIb,EAAkB,YAGlC,IAAAC,eAAc,MA1CR,gDA2CVC,YAAYW,GACZT,OAAO,CACNC,MAAO,CACL,IAAI,EAAAC,aACFrQ,EAAQgM,uBACR,yBACA,QAILsE,OAAO,CAEb,CA9FD,CAActB,EAAA,EAAAA,oCAAA,EAAAA,kCAAiC,KAiG/C,SAAcC,GACZ,MAAMsB,EAAc,OAAWhN,MAUlB,EAAAuM,cAAiBC,IAGrB,IAAAC,eAAc,MAFR,qDAGVC,YAFW,CAAC,GAGZtJ,KAAKoJ,EAAOG,MACZC,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAaE,EAAa,UAAW,QAElDD,OAEN,CAtBD,CAAcrB,EAAA,EAAAA,gDAAA,EAAAA,8CAA6C,KAyB3D,SAAcC,GACW,KAAQ,QAET,OAEI,OAEZ,OAAW3L,MAEV,OAAWA,MAEP,OAAWA,MAEf,OAiBF,EAAAuM,cAAiBC,IAC5B,MACMa,EAAQ,CAAC,EAiCf,YAhCiCC,IAA7Bd,EAAuB,iBACzBa,EAAsB,eAAIb,EAAuB,qBAGxBc,IAAvBd,EAAiB,WACnBa,EAAgB,SAAIb,EAAiB,eAGPc,IAA5Bd,EAAsB,gBACxBa,EAAqB,cAAIb,EAAsB,oBAGbc,IAAhCd,EAA0B,oBAC5Ba,EAAyB,kBAAIb,EAA0B,wBAGjCc,IAApBd,EAAc,QAChBa,EAAa,MAAIb,EAAc,YAGRc,IAArBd,EAAe,SACjBa,EAAc,OAAIb,EAAe,aAGNc,IAAzBd,EAAmB,aACrBa,EAAkB,WAAIb,EAAmB,iBAGlBc,IAArBd,EAAe,SACjBa,EAAe,QAAIb,EAAe,SAG7B,IAAAC,eAAc,MAlCR,oDAmCVC,YAAYW,GACZT,OAAO,CACNC,MAAO,CACL,IAAI,EAAAC,aAAarQ,EAAQkM,cAAe,gBAAiB,QAG5DoE,OAAO,CAEb,CA1ED,CAAcpB,EAAA,EAAAA,uCAAA,EAAAA,qCAAoC,KA6ElD,SAAcC,GACZ,MAAMoB,EAAc,KAAQvQ,EAAQiK,WAUvB,EAAA6F,cAAiBC,IAC5B,MAAMS,EACJ,sGAAsGC,QACpG,oBACAV,EAAwB,gBAAEW,YAG9B,OAAO,IAAAV,eAAc,MAAOQ,GACzBP,YAFW,CAAC,GAGZE,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAaE,EAAa,UAAW,QAElDD,OAAO,CAEb,CAzBD,CAAcnB,EAAA,EAAAA,uEAAA,EAAAA,qEAAoE,KA4BlF,SAAcC,GACE,OAAW7L,MAEV,OAAWA,MAEP,OAAWA,MAEf,OANf,MAQMgN,EAAc,KAAQvQ,EAAQ8H,eAcvB,EAAAgI,cAAiBC,IAC5B,MAAMS,EACJ,gFAAgFC,QAC9E,gBACAV,EAAoB,YAAEW,YAEpBE,EAAQ,CAAC,EAiBf,YAhBwBC,IAApBd,EAAc,QAChBa,EAAa,MAAIb,EAAc,YAGRc,IAArBd,EAAe,SACjBa,EAAc,OAAIb,EAAe,aAGNc,IAAzBd,EAAmB,aACrBa,EAAkB,WAAIb,EAAmB,iBAGlBc,IAArBd,EAAe,SACjBa,EAAe,QAAIb,EAAe,SAG7B,IAAAC,eAAc,MAAOQ,GACzBP,YAAYW,GACZT,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAaE,EAAa,UAAW,QAElDD,OAAO,CAEb,CArDD,CAAclB,EAAA,EAAAA,iDAAA,EAAAA,+CAA8C,KAwD5D,SAAcC,GACC,KAAQ,QAArB,MAEMkB,EAAc,OAWP,EAAAT,cAAiBC,IAC5B,MAAMS,EACJ,gFAAgFC,QAC9E,gBACAV,EAAoB,YAAEW,YAG1B,OAAO,IAAAV,eAAc,MAAOQ,GACzBP,YAFW,CAAC,GAGZtJ,KAAKoJ,EAAOG,MACZC,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAaE,EAAa,UAAW,QAElDD,OAAO,CAEb,CA7BD,CAAcjB,EAAA,EAAAA,kDAAA,EAAAA,gDAA+C,KAgC7D,SAAcC,GAUC,EAAAQ,cAAiBC,IAC5B,MAAMS,EACJ,kGACGC,QAAQ,oBAAqBV,EAAwB,gBAAEW,YACvDD,QAAQ,gBAAiBV,EAAoB,YAAEW,YAEpD,OAAO,IAAAV,eAAc,SAAUQ,GAC5BP,YAFW,CAAC,GAGZE,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAarQ,EAAQqO,QAAS,UAAW,QAEtDiC,OAAO,CAEb,CAvBD,CAAchB,EAAA,EAAAA,0DAAA,EAAAA,wDAAuD,KA0BrE,SAAcC,GAUC,EAAAO,cAAiBC,IAC5B,MAAMS,EACJ,sGACGC,QACC,sBACAV,EAA0B,kBAAEW,YAE7BD,QAAQ,kBAAmBV,EAAsB,cAAEW,YAExD,OAAO,IAAAV,eAAc,MAAOQ,GACzBP,YAFW,CAAC,GAGZE,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAarQ,EAAQqO,QAAS,UAAW,QAEtDiC,OAAO,CAEb,CA1BD,CAAcf,EAAA,EAAAA,wDAAA,EAAAA,sDAAqD,KA6BnE,SAAcC,GACG,KAAQ,QAEL,KAAQ,QAEJ,KAAQ,QAED,OAEN,OAEA,OAEA,OAEG,KAAQ,QAEpB,OAAWjM,MAEV,OAAWA,MAEP,OAAWA,MAEf,OAEA,KAAQvD,EAAQgK,2BAwBlB,EAAA8F,cAAiBC,IAC5B,MACMa,EAAQ,CAAC,EA6Df,YA5DyBC,IAArBd,EAAe,SACjBa,EAAc,OAAIb,EAAe,aAGPc,IAAxBd,EAAkB,YACpBa,EAAiB,UAAIb,EAAkB,gBAGfc,IAAtBd,EAAgB,UAClBa,EAAe,QAAIb,EAAgB,cAGLc,IAA5Bd,EAAsB,gBACxBa,EAAqB,cAAIb,EAAsB,oBAGVc,IAAnCd,EAA6B,uBAC/Ba,EAA4B,qBAAIb,EAA6B,2BAG9Bc,IAA7Bd,EAAuB,iBACzBa,EAAsB,eAAIb,EAAuB,qBAGlBc,IAA7Bd,EAAuB,iBACzBa,EAAsB,eAAIb,EAAuB,qBAGlBc,IAA7Bd,EAAuB,iBACzBa,EAAsB,eAAIb,EAAuB,qBAGfc,IAAhCd,EAA0B,oBAC5Ba,EAAyB,kBAAIb,EAA0B,wBAGjCc,IAApBd,EAAc,QAChBa,EAAa,MAAIb,EAAc,YAGRc,IAArBd,EAAe,SACjBa,EAAc,OAAIb,EAAe,aAGNc,IAAzBd,EAAmB,aACrBa,EAAkB,WAAIb,EAAmB,iBAGlBc,IAArBd,EAAe,SACjBa,EAAe,QAAIb,EAAe,aAGRc,IAAxBd,EAAkB,YACpBa,EAAiB,UAAIb,EAAkB,gBAGhBc,IAArBd,EAAe,SACjBa,EAAc,OAAIb,EAAe,SAG5B,IAAAC,eAAc,MA9DR,gDA+DVC,YAAYW,GACZT,OAAO,CACNC,MAAO,CACL,IAAI,EAAAC,aACFrQ,EAAQiM,kBACR,oBACA,QAILqE,OAAO,CAEb,CA7HD,CAAcd,EAAA,EAAAA,4BAAA,EAAAA,0BAAyB,KAgIvC,SAAcC,GACO,OAAnB,MAEMc,EAAc,KAAQvQ,EAAQ0K,OAUvB,EAAAoF,cAAiBC,IAC5B,MACMa,EAAQ,CAAC,EAKf,YAJ6BC,IAAzBd,EAAmB,aACrBa,EAAkB,WAAIb,EAAmB,aAGpC,IAAAC,eAAc,MANR,6DAOVC,YAAYW,GACZT,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAaE,EAAa,UAAW,QAElDD,OAAO,CAEb,CA3BD,CAAcb,EAAA,EAAAA,+CAAA,EAAAA,6CAA4C,KA8B1D,SAAcC,GACgB,OAA5B,MAEMa,EAAc,KAAQvQ,EAAQ0K,OAUvB,EAAAoF,cAAiBC,IAC5B,MACMa,EAAQ,CAAC,EAKf,YAJsCC,IAAlCd,EAA4B,sBAC9Ba,EAA2B,oBAAIb,EAA4B,sBAGtD,IAAAC,eAAc,MANR,wDAOVC,YAAYW,GACZT,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAaE,EAAa,UAAW,QAElDD,OAAO,CAEb,CA3BD,CAAcZ,EAAA,EAAAA,yCAAA,EAAAA,uCAAsC,KA8BpD,SAAcC,GACZ,MAAMY,EAAc,OAMP,EAAAT,cAAgB,KAIpB,IAAAE,eAAc,MAFnB,mEAGCC,YAFW,CAAC,GAGZE,OAAO,CACNC,MAAO,CAAC,IAAI,EAAAC,aAAaE,EAAa,UAAW,QAElDD,OAEN,CAlBD,CAAcX,EAAA,EAAAA,mDAAA,EAAAA,iDAAgD,KAqB9D,SAAcC,GAUC,EAAAE,cAAiBC,IAIrB,IAAAC,eAAc,MAFnB,mEAGCC,YAFW,CAAC,GAGZtJ,KAAKoJ,EAAOG,MACZC,OAAO,CACNC,MAAO,CACL,IAAI,EAAAC,aAAarQ,EAAQqO,QAAS,UAAW,KAC7C,IAAI,EAAAgC,aAAarQ,EAAQqO,QAAS,UAAW,QAGhDiC,OAEN,CAzBD,CAAcV,EAAA,EAAAA,oDAAA,EAAAA,kDAAiD,IA0BhE,CA73BD,CAAc3P,IAAAA,EAAU,I","sources":["webpack:///./src/generated/OpenapiNotifications.ts"],"sourcesContent":["/* eslint-disable */\n/**\n * Generated code, DO NOT modify directly.\n */\nimport * as z from 'zod';\nimport { ValidatedResponse } from 'openapi2typescript';\nimport { Action } from 'react-fetching-library';\nimport { ValidateRule } from 'openapi2typescript';\nimport {\n  ActionValidatableConfig,\n  actionBuilder,\n} from 'openapi2typescript/react-fetching-library';\n\nexport module Schemas {\n  export const AddAccessRequest = zodSchemaAddAccessRequest();\n  export type AddAccessRequest = {\n    application_id?: UUID | undefined | null;\n    role?: string | undefined | null;\n  };\n\n  export const AddApplicationRequest = zodSchemaAddApplicationRequest();\n  export type AddApplicationRequest = {\n    bundle_id: UUID;\n    display_name: string;\n    name: string;\n    owner_role?: string | undefined | null;\n  };\n\n  export const AggregationEmailTemplate = zodSchemaAggregationEmailTemplate();\n  export type AggregationEmailTemplate = {\n    application?: Application | undefined | null;\n    application_id?: UUID | undefined | null;\n    body_template?: Template | undefined | null;\n    body_template_id: UUID;\n    created?: LocalDateTime | undefined | null;\n    id?: UUID | undefined | null;\n    subject_template?: Template | undefined | null;\n    subject_template_id: UUID;\n    subscription_type: SubscriptionType;\n    updated?: LocalDateTime | undefined | null;\n  };\n\n  export const Application = zodSchemaApplication();\n  export type Application = {\n    bundle_id: UUID;\n    created?: LocalDateTime | undefined | null;\n    display_name: string;\n    id?: UUID | undefined | null;\n    name: string;\n    updated?: LocalDateTime | undefined | null;\n  };\n\n  export const Application1 = zodSchemaApplication1();\n  export type Application1 = {\n    display_name: string;\n    id: UUID;\n  };\n\n  export const ApplicationDTO = zodSchemaApplicationDTO();\n  export type ApplicationDTO = {\n    bundle_id: UUID;\n    display_name: string;\n    event_types?: Array<EventTypeDTO> | undefined | null;\n    id?: UUID | undefined | null;\n    name: string;\n  };\n\n  export const ApplicationDTO1 = zodSchemaApplicationDTO1();\n  export type ApplicationDTO1 = {\n    bundle_id: UUID;\n    created?: string | undefined | null;\n    display_name: string;\n    id?: UUID | undefined | null;\n    name: string;\n    owner_role?: string | undefined | null;\n  };\n\n  export const ApplicationSettingsValue = zodSchemaApplicationSettingsValue();\n  export type ApplicationSettingsValue = {\n    eventTypes?:\n      | {\n          [x: string]: EventTypeSettingsValue;\n        }\n      | undefined\n      | null;\n  };\n\n  export const BasicAuthenticationDTO = zodSchemaBasicAuthenticationDTO();\n  export type BasicAuthenticationDTO = {\n    password?: string | undefined | null;\n    username?: string | undefined | null;\n  };\n\n  export const BehaviorGroup = zodSchemaBehaviorGroup();\n  export type BehaviorGroup = {\n    actions?: Array<BehaviorGroupAction> | undefined | null;\n    behaviors?: Array<EventTypeBehavior> | undefined | null;\n    bundle?: Bundle | undefined | null;\n    bundle_id: UUID;\n    created?: LocalDateTime | undefined | null;\n    default_behavior?: boolean | undefined | null;\n    display_name: string;\n    id?: UUID | undefined | null;\n    updated?: LocalDateTime | undefined | null;\n  };\n\n  export const BehaviorGroupAction = zodSchemaBehaviorGroupAction();\n  export type BehaviorGroupAction = {\n    created?: LocalDateTime | undefined | null;\n    endpoint?: Endpoint | undefined | null;\n    id?: BehaviorGroupActionId | undefined | null;\n  };\n\n  export const BehaviorGroupActionId = zodSchemaBehaviorGroupActionId();\n  export type BehaviorGroupActionId = {\n    behaviorGroupId: UUID;\n    endpointId: UUID;\n  };\n\n  export const Bundle = zodSchemaBundle();\n  export type Bundle = {\n    created?: LocalDateTime | undefined | null;\n    display_name: string;\n    id?: UUID | undefined | null;\n    name: string;\n    updated?: LocalDateTime | undefined | null;\n  };\n\n  export const BundleDTO = zodSchemaBundleDTO();\n  export type BundleDTO = {\n    applications?: Array<ApplicationDTO> | undefined | null;\n    display_name: string;\n    id?: UUID | undefined | null;\n    name: string;\n  };\n\n  export const BundleSettingsValue = zodSchemaBundleSettingsValue();\n  export type BundleSettingsValue = {\n    applications?:\n      | {\n          [x: string]: ApplicationSettingsValue;\n        }\n      | undefined\n      | null;\n  };\n\n  export const CamelPropertiesDTO = zodSchemaCamelPropertiesDTO();\n  export type CamelPropertiesDTO = {\n    basicAuthentication?: BasicAuthenticationDTO | undefined | null;\n    disableSslVerification: boolean;\n    extras?:\n      | {\n          [x: string]: string;\n        }\n      | undefined\n      | null;\n    secretToken?: string | undefined | null;\n    url: string;\n  };\n\n  export const CreateBehaviorGroupRequest =\n    zodSchemaCreateBehaviorGroupRequest();\n  export type CreateBehaviorGroupRequest = {\n    bundle_id?: UUID | undefined | null;\n    bundle_name?: string | undefined | null;\n    bundle_uuid_or_bundle_name_valid?: boolean | undefined | null;\n    display_name: string;\n    endpoint_ids?: Array<string> | undefined | null;\n    event_type_ids?: Array<string> | undefined | null;\n  };\n\n  export const CreateBehaviorGroupResponse =\n    zodSchemaCreateBehaviorGroupResponse();\n  export type CreateBehaviorGroupResponse = {\n    bundle_id: UUID;\n    created: LocalDateTime;\n    display_name: string;\n    endpoints: Array<string>;\n    event_types: Array<string>;\n    id: UUID;\n  };\n\n  export const CurrentStatus = zodSchemaCurrentStatus();\n  export type CurrentStatus = {\n    end_time?: LocalDateTime | undefined | null;\n    start_time?: LocalDateTime | undefined | null;\n    status: Status;\n  };\n\n  export const DrawerEntryPayload = zodSchemaDrawerEntryPayload();\n  export type DrawerEntryPayload = {\n    bundle?: string | undefined | null;\n    created?: LocalDateTime | undefined | null;\n    description?: string | undefined | null;\n    id?: UUID | undefined | null;\n    read: boolean;\n    source?: string | undefined | null;\n    title?: string | undefined | null;\n  };\n\n  export const Endpoint = zodSchemaEndpoint();\n  export type Endpoint = {\n    created?: LocalDateTime | undefined | null;\n    description: string;\n    enabled?: boolean | undefined | null;\n    id?: UUID | undefined | null;\n    name: string;\n    properties?: EndpointProperties | undefined | null;\n    server_errors?: number | undefined | null;\n    status?: EndpointStatus | undefined | null;\n    sub_type?: string | undefined | null;\n    type?: EndpointType | undefined | null;\n    updated?: LocalDateTime | undefined | null;\n  };\n\n  export const EndpointDTO = zodSchemaEndpointDTO();\n  export type EndpointDTO = {\n    created?: LocalDateTime | undefined | null;\n    description: string;\n    enabled?: boolean | undefined | null;\n    event_types?: Array<string> | undefined | null;\n    event_types_group_by_bundles_and_applications?:\n      | Array<BundleDTO>\n      | undefined\n      | null;\n    id?: UUID | undefined | null;\n    name: string;\n    properties?:\n      | (\n          | CamelPropertiesDTO\n          | SystemSubscriptionPropertiesDTO\n          | WebhookPropertiesDTO\n          | PagerDutyPropertiesDTO\n        )\n      | undefined\n      | null;\n    server_errors?: number | undefined | null;\n    status?: EndpointStatusDTO | undefined | null;\n    sub_type?: string | undefined | null;\n    type: EndpointTypeDTO;\n    updated?: LocalDateTime | undefined | null;\n  };\n\n  export const EndpointPage = zodSchemaEndpointPage();\n  export type EndpointPage = {\n    data: Array<EndpointDTO>;\n    links: {\n      [x: string]: string;\n    };\n    meta: Meta;\n  };\n\n  export const EndpointProperties = zodSchemaEndpointProperties();\n  export type EndpointProperties = unknown;\n\n  export const EndpointPropertiesDTO = zodSchemaEndpointPropertiesDTO();\n  export type EndpointPropertiesDTO = unknown;\n\n  export const EndpointStatus = zodSchemaEndpointStatus();\n  export type EndpointStatus =\n    | 'READY'\n    | 'UNKNOWN'\n    | 'NEW'\n    | 'PROVISIONING'\n    | 'DELETING'\n    | 'FAILED';\n\n  export const EndpointStatusDTO = zodSchemaEndpointStatusDTO();\n  export type EndpointStatusDTO =\n    | 'DELETING'\n    | 'FAILED'\n    | 'NEW'\n    | 'PROVISIONING'\n    | 'READY'\n    | 'UNKNOWN';\n\n  export const EndpointTestRequest = zodSchemaEndpointTestRequest();\n  export type EndpointTestRequest = {\n    message: string;\n  };\n\n  export const EndpointType = zodSchemaEndpointType();\n  export type EndpointType =\n    | 'ansible'\n    | 'camel'\n    | 'drawer'\n    | 'email_subscription'\n    | 'webhook'\n    | 'pagerduty';\n\n  export const EndpointTypeDTO = zodSchemaEndpointTypeDTO();\n  export type EndpointTypeDTO =\n    | 'ansible'\n    | 'camel'\n    | 'drawer'\n    | 'email_subscription'\n    | 'webhook';\n\n  export const Environment = zodSchemaEnvironment();\n  export type Environment = 'PROD' | 'STAGE' | 'EPHEMERAL' | 'LOCAL_SERVER';\n\n  export const EventLogEntry = zodSchemaEventLogEntry();\n  export type EventLogEntry = {\n    actions: Array<EventLogEntryAction>;\n    application: string;\n    bundle: string;\n    created: LocalDateTime;\n    event_type: string;\n    id: UUID;\n    payload?: string | undefined | null;\n  };\n\n  export const EventLogEntryAction = zodSchemaEventLogEntryAction();\n  export type EventLogEntryAction = {\n    details?:\n      | {\n          [x: string]: unknown;\n        }\n      | undefined\n      | null;\n    endpoint_id?: UUID | undefined | null;\n    endpoint_sub_type?: string | undefined | null;\n    endpoint_type: EndpointType;\n    id: UUID;\n    status: EventLogEntryActionStatus;\n  };\n\n  export const EventLogEntryActionStatus = zodSchemaEventLogEntryActionStatus();\n  export type EventLogEntryActionStatus =\n    | 'SENT'\n    | 'SUCCESS'\n    | 'PROCESSING'\n    | 'FAILED'\n    | 'UNKNOWN';\n\n  export const EventType = zodSchemaEventType();\n  export type EventType = {\n    application?: Application | undefined | null;\n    application_id: UUID;\n    description?: string | undefined | null;\n    display_name: string;\n    fully_qualified_name?: string | undefined | null;\n    id?: UUID | undefined | null;\n    name: string;\n    not_subscription_locked_or_subscribed_by_default?:\n      | boolean\n      | undefined\n      | null;\n    subscribed_by_default?: boolean | undefined | null;\n    subscription_locked?: boolean | undefined | null;\n    visible?: boolean | undefined | null;\n  };\n\n  export const EventTypeBehavior = zodSchemaEventTypeBehavior();\n  export type EventTypeBehavior = {\n    created?: LocalDateTime | undefined | null;\n    event_type?: EventType | undefined | null;\n    id?: EventTypeBehaviorId | undefined | null;\n  };\n\n  export const EventTypeBehaviorId = zodSchemaEventTypeBehaviorId();\n  export type EventTypeBehaviorId = {\n    behaviorGroupId: UUID;\n    eventTypeId: UUID;\n  };\n\n  export const EventTypeDTO = zodSchemaEventTypeDTO();\n  export type EventTypeDTO = {\n    application?: ApplicationDTO | undefined | null;\n    description?: string | undefined | null;\n    display_name: string;\n    id?: UUID | undefined | null;\n    name: string;\n  };\n\n  export const EventTypeSettingsValue = zodSchemaEventTypeSettingsValue();\n  export type EventTypeSettingsValue = {\n    emailSubscriptionTypes?:\n      | {\n          [x: string]: boolean;\n        }\n      | undefined\n      | null;\n    hasForcedEmail?: boolean | undefined | null;\n    subscriptionLocked?: boolean | undefined | null;\n  };\n\n  export const EventsReplayRequest = zodSchemaEventsReplayRequest();\n  export type EventsReplayRequest = {\n    end_date: LocalDateTime;\n    org_id?: string | undefined | null;\n    start_date: LocalDateTime;\n  };\n\n  export const Facet = zodSchemaFacet();\n  export type Facet = {\n    children?: Array<Facet> | undefined | null;\n    displayName: string;\n    id: string;\n    name: string;\n  };\n\n  export const HttpType = zodSchemaHttpType();\n  export type HttpType = 'GET' | 'POST' | 'PUT';\n\n  export const InstantEmailTemplate = zodSchemaInstantEmailTemplate();\n  export type InstantEmailTemplate = {\n    body_template?: Template | undefined | null;\n    body_template_id: UUID;\n    created?: LocalDateTime | undefined | null;\n    event_type?: EventType | undefined | null;\n    event_type_id?: UUID | undefined | null;\n    id?: UUID | undefined | null;\n    subject_template?: Template | undefined | null;\n    subject_template_id: UUID;\n    updated?: LocalDateTime | undefined | null;\n  };\n\n  export const InternalApplicationUserPermission =\n    zodSchemaInternalApplicationUserPermission();\n  export type InternalApplicationUserPermission = {\n    application_display_name: string;\n    application_id: UUID;\n    role: string;\n  };\n\n  export const InternalRoleAccess = zodSchemaInternalRoleAccess();\n  export type InternalRoleAccess = {\n    application_id: UUID;\n    id?: UUID | undefined | null;\n    role: string;\n  };\n\n  export const InternalUserPermissions = zodSchemaInternalUserPermissions();\n  export type InternalUserPermissions = {\n    applications: Array<Application1>;\n    is_admin: boolean;\n    roles: Array<string>;\n  };\n\n  export const LocalDate = zodSchemaLocalDate();\n  export type LocalDate = string;\n\n  export const LocalDateTime = zodSchemaLocalDateTime();\n  export type LocalDateTime = string;\n\n  export const LocalTime = zodSchemaLocalTime();\n  export type LocalTime = string;\n\n  export const MessageValidationResponse = zodSchemaMessageValidationResponse();\n  export type MessageValidationResponse = {\n    errors: {\n      [x: string]: Array<string>;\n    };\n  };\n\n  export const Meta = zodSchemaMeta();\n  export type Meta = {\n    count: number;\n  };\n\n  export const NotificationHistory = zodSchemaNotificationHistory();\n  export type NotificationHistory = {\n    created?: LocalDateTime | undefined | null;\n    details?:\n      | {\n          [x: string]: unknown;\n        }\n      | undefined\n      | null;\n    endpointId?: UUID | undefined | null;\n    endpointSubType?: string | undefined | null;\n    endpointType?: EndpointType | undefined | null;\n    id?: UUID | undefined | null;\n    invocationTime: number;\n    status: NotificationStatus;\n  };\n\n  export const NotificationStatus = zodSchemaNotificationStatus();\n  export type NotificationStatus =\n    | 'FAILED_INTERNAL'\n    | 'FAILED_EXTERNAL'\n    | 'PROCESSING'\n    | 'SENT'\n    | 'SUCCESS';\n\n  export const PageBehaviorGroup = zodSchemaPageBehaviorGroup();\n  export type PageBehaviorGroup = {\n    data: Array<BehaviorGroup>;\n    links: {\n      [x: string]: string;\n    };\n    meta: Meta;\n  };\n\n  export const PageDrawerEntryPayload = zodSchemaPageDrawerEntryPayload();\n  export type PageDrawerEntryPayload = {\n    data: Array<DrawerEntryPayload>;\n    links: {\n      [x: string]: string;\n    };\n    meta: Meta;\n  };\n\n  export const PageEventLogEntry = zodSchemaPageEventLogEntry();\n  export type PageEventLogEntry = {\n    data: Array<EventLogEntry>;\n    links: {\n      [x: string]: string;\n    };\n    meta: Meta;\n  };\n\n  export const PageEventType = zodSchemaPageEventType();\n  export type PageEventType = {\n    data: Array<EventType>;\n    links: {\n      [x: string]: string;\n    };\n    meta: Meta;\n  };\n\n  export const PageNotificationHistory = zodSchemaPageNotificationHistory();\n  export type PageNotificationHistory = {\n    data: Array<NotificationHistory>;\n    links: {\n      [x: string]: string;\n    };\n    meta: Meta;\n  };\n\n  export const PagerDutyPropertiesDTO = zodSchemaPagerDutyPropertiesDTO();\n  export type PagerDutyPropertiesDTO = {\n    secretToken: string;\n    severity: PagerDutySeverityDTO;\n  };\n\n  export const PagerDutySeverity = zodSchemaPagerDutySeverity();\n  export type PagerDutySeverity = 'critical' | 'error' | 'warning' | 'info';\n\n  export const PagerDutySeverityDTO = zodSchemaPagerDutySeverityDTO();\n  export type PagerDutySeverityDTO = 'critical' | 'error' | 'warning' | 'info';\n\n  export const RenderEmailTemplateRequest =\n    zodSchemaRenderEmailTemplateRequest();\n  export type RenderEmailTemplateRequest = {\n    payload: string;\n    template: Array<string>;\n  };\n\n  export const RequestDefaultBehaviorGroupPropertyList =\n    zodSchemaRequestDefaultBehaviorGroupPropertyList();\n  export type RequestDefaultBehaviorGroupPropertyList = {\n    ignore_preferences: boolean;\n    only_admins: boolean;\n  };\n\n  export const RequestSystemSubscriptionProperties =\n    zodSchemaRequestSystemSubscriptionProperties();\n  export type RequestSystemSubscriptionProperties = {\n    group_id?: UUID | undefined | null;\n    only_admins: boolean;\n  };\n\n  export const ServerInfo = zodSchemaServerInfo();\n  export type ServerInfo = {\n    environment?: Environment | undefined | null;\n  };\n\n  export const SettingsValuesByEventType = zodSchemaSettingsValuesByEventType();\n  export type SettingsValuesByEventType = {\n    bundles?:\n      | {\n          [x: string]: BundleSettingsValue;\n        }\n      | undefined\n      | null;\n  };\n\n  export const Status = zodSchemaStatus();\n  export type Status = 'UP' | 'MAINTENANCE';\n\n  export const SubscriptionType = zodSchemaSubscriptionType();\n  export type SubscriptionType = 'INSTANT' | 'DAILY' | 'DRAWER';\n\n  export const SystemSubscriptionPropertiesDTO =\n    zodSchemaSystemSubscriptionPropertiesDTO();\n  export type SystemSubscriptionPropertiesDTO = {\n    groupId?: UUID | undefined | null;\n    ignorePreferences?: boolean | undefined | null;\n    onlyAdmins?: boolean | undefined | null;\n  };\n\n  export const Template = zodSchemaTemplate();\n  export type Template = {\n    created?: LocalDateTime | undefined | null;\n    data: string;\n    description: string;\n    id?: UUID | undefined | null;\n    name: string;\n    updated?: LocalDateTime | undefined | null;\n  };\n\n  export const TriggerDailyDigestRequest = zodSchemaTriggerDailyDigestRequest();\n  export type TriggerDailyDigestRequest = {\n    application_name: string;\n    bundle_name: string;\n    end?: LocalDateTime | undefined | null;\n    org_id: string;\n    start?: LocalDateTime | undefined | null;\n  };\n\n  export const UUID = zodSchemaUUID();\n  export type UUID = string;\n\n  export const UpdateApplicationRequest = zodSchemaUpdateApplicationRequest();\n  export type UpdateApplicationRequest = {\n    display_name?: string | undefined | null;\n    name?: string | undefined | null;\n    owner_role?: string | undefined | null;\n  };\n\n  export const UpdateBehaviorGroupRequest =\n    zodSchemaUpdateBehaviorGroupRequest();\n  export type UpdateBehaviorGroupRequest = {\n    display_name?: string | undefined | null;\n    display_name_not_null_and_blank?: boolean | undefined | null;\n    endpoint_ids?: Array<string> | undefined | null;\n    event_type_ids?: Array<string> | undefined | null;\n  };\n\n  export const UpdateNotificationDrawerStatus =\n    zodSchemaUpdateNotificationDrawerStatus();\n  export type UpdateNotificationDrawerStatus = {\n    notification_ids: Array<string>;\n    read_status: boolean;\n  };\n\n  export const WebhookPropertiesDTO = zodSchemaWebhookPropertiesDTO();\n  export type WebhookPropertiesDTO = {\n    basicAuthentication?: BasicAuthenticationDTO | undefined | null;\n    bearerAuthentication?: string | undefined | null;\n    disableSslVerification: boolean;\n    method: HttpType;\n    secretToken?: string | undefined | null;\n    url: string;\n  };\n\n  export const X509Certificate = zodSchemaX509Certificate();\n  export type X509Certificate = {\n    application: string;\n    bundle: string;\n    id?: UUID | undefined | null;\n    source_environment: string;\n    subject_dn: string;\n  };\n\n  export const __Empty = zodSchema__Empty();\n  export type __Empty = string | undefined;\n\n  function zodSchemaAddAccessRequest() {\n    return z\n      .object({\n        application_id: zodSchemaUUID().optional().nullable(),\n        role: z.string().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaAddApplicationRequest() {\n    return z\n      .object({\n        bundle_id: zodSchemaUUID(),\n        display_name: z.string(),\n        name: z.string(),\n        owner_role: z.string().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaAggregationEmailTemplate() {\n    return z\n      .object({\n        application: zodSchemaApplication().optional().nullable(),\n        application_id: zodSchemaUUID().optional().nullable(),\n        body_template: zodSchemaTemplate().optional().nullable(),\n        body_template_id: zodSchemaUUID(),\n        created: zodSchemaLocalDateTime().optional().nullable(),\n        id: zodSchemaUUID().optional().nullable(),\n        subject_template: zodSchemaTemplate().optional().nullable(),\n        subject_template_id: zodSchemaUUID(),\n        subscription_type: zodSchemaSubscriptionType(),\n        updated: zodSchemaLocalDateTime().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaApplication() {\n    return z\n      .object({\n        bundle_id: zodSchemaUUID(),\n        created: zodSchemaLocalDateTime().optional().nullable(),\n        display_name: z.string(),\n        id: zodSchemaUUID().optional().nullable(),\n        name: z.string(),\n        updated: zodSchemaLocalDateTime().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaApplication1() {\n    return z\n      .object({\n        display_name: z.string(),\n        id: zodSchemaUUID(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaApplicationDTO() {\n    return z\n      .object({\n        bundle_id: zodSchemaUUID(),\n        display_name: z.string(),\n        event_types: z.array(zodSchemaEventTypeDTO()).optional().nullable(),\n        id: zodSchemaUUID().optional().nullable(),\n        name: z.string(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaApplicationDTO1() {\n    return z\n      .object({\n        bundle_id: zodSchemaUUID(),\n        created: z.string().optional().nullable(),\n        display_name: z.string(),\n        id: zodSchemaUUID().optional().nullable(),\n        name: z.string(),\n        owner_role: z.string().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaApplicationSettingsValue() {\n    return z\n      .object({\n        eventTypes: z\n          .record(zodSchemaEventTypeSettingsValue())\n          .optional()\n          .nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaBasicAuthenticationDTO() {\n    return z\n      .object({\n        password: z.string().optional().nullable(),\n        username: z.string().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaBehaviorGroup() {\n    return z\n      .object({\n        actions: z.array(zodSchemaBehaviorGroupAction()).optional().nullable(),\n        behaviors: z.array(zodSchemaEventTypeBehavior()).optional().nullable(),\n        bundle: zodSchemaBundle().optional().nullable(),\n        bundle_id: zodSchemaUUID(),\n        created: zodSchemaLocalDateTime().optional().nullable(),\n        default_behavior: z.boolean().optional().nullable(),\n        display_name: z.string(),\n        id: zodSchemaUUID().optional().nullable(),\n        updated: zodSchemaLocalDateTime().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaBehaviorGroupAction() {\n    return z\n      .object({\n        created: zodSchemaLocalDateTime().optional().nullable(),\n        endpoint: zodSchemaEndpoint().optional().nullable(),\n        id: zodSchemaBehaviorGroupActionId().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaBehaviorGroupActionId() {\n    return z\n      .object({\n        behaviorGroupId: zodSchemaUUID(),\n        endpointId: zodSchemaUUID(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaBundle() {\n    return z\n      .object({\n        created: zodSchemaLocalDateTime().optional().nullable(),\n        display_name: z.string(),\n        id: zodSchemaUUID().optional().nullable(),\n        name: z.string(),\n        updated: zodSchemaLocalDateTime().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaBundleDTO() {\n    return z\n      .object({\n        applications: z.array(zodSchemaApplicationDTO()).optional().nullable(),\n        display_name: z.string(),\n        id: zodSchemaUUID().optional().nullable(),\n        name: z.string(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaBundleSettingsValue() {\n    return z\n      .object({\n        applications: z\n          .record(zodSchemaApplicationSettingsValue())\n          .optional()\n          .nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaCamelPropertiesDTO() {\n    return z\n      .object({\n        basicAuthentication: zodSchemaBasicAuthenticationDTO()\n          .optional()\n          .nullable(),\n        disableSslVerification: z.boolean(),\n        extras: z.record(z.string()).optional().nullable(),\n        secretToken: z.string().optional().nullable(),\n        url: z.string(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaCreateBehaviorGroupRequest() {\n    return z\n      .object({\n        bundle_id: zodSchemaUUID().optional().nullable(),\n        bundle_name: z.string().optional().nullable(),\n        bundle_uuid_or_bundle_name_valid: z.boolean().optional().nullable(),\n        display_name: z.string(),\n        endpoint_ids: z.array(z.string()).optional().nullable(),\n        event_type_ids: z.array(z.string()).optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaCreateBehaviorGroupResponse() {\n    return z\n      .object({\n        bundle_id: zodSchemaUUID(),\n        created: zodSchemaLocalDateTime(),\n        display_name: z.string(),\n        endpoints: z.array(z.string()),\n        event_types: z.array(z.string()),\n        id: zodSchemaUUID(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaCurrentStatus() {\n    return z\n      .object({\n        end_time: zodSchemaLocalDateTime().optional().nullable(),\n        start_time: zodSchemaLocalDateTime().optional().nullable(),\n        status: zodSchemaStatus(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaDrawerEntryPayload() {\n    return z\n      .object({\n        bundle: z.string().optional().nullable(),\n        created: zodSchemaLocalDateTime().optional().nullable(),\n        description: z.string().optional().nullable(),\n        id: zodSchemaUUID().optional().nullable(),\n        read: z.boolean(),\n        source: z.string().optional().nullable(),\n        title: z.string().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaEndpoint() {\n    return z\n      .object({\n        created: zodSchemaLocalDateTime().optional().nullable(),\n        description: z.string(),\n        enabled: z.boolean().optional().nullable(),\n        id: zodSchemaUUID().optional().nullable(),\n        name: z.string(),\n        properties: zodSchemaEndpointProperties().optional().nullable(),\n        server_errors: z.number().int().optional().nullable(),\n        status: zodSchemaEndpointStatus().optional().nullable(),\n        sub_type: z.string().optional().nullable(),\n        type: zodSchemaEndpointType().optional().nullable(),\n        updated: zodSchemaLocalDateTime().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaEndpointDTO() {\n    return z\n      .object({\n        created: zodSchemaLocalDateTime().optional().nullable(),\n        description: z.string(),\n        enabled: z.boolean().optional().nullable(),\n        event_types: z.array(z.string()).optional().nullable(),\n        event_types_group_by_bundles_and_applications: z\n          .array(zodSchemaBundleDTO())\n          .optional()\n          .nullable(),\n        id: zodSchemaUUID().optional().nullable(),\n        name: z.string(),\n        properties: z\n          .union([\n            zodSchemaCamelPropertiesDTO(),\n            zodSchemaSystemSubscriptionPropertiesDTO(),\n            zodSchemaWebhookPropertiesDTO(),\n            zodSchemaPagerDutyPropertiesDTO(),\n          ])\n          .optional()\n          .nullable(),\n        server_errors: z.number().int().optional().nullable(),\n        status: zodSchemaEndpointStatusDTO().optional().nullable(),\n        sub_type: z.string().optional().nullable(),\n        type: zodSchemaEndpointTypeDTO(),\n        updated: zodSchemaLocalDateTime().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaEndpointPage() {\n    return z\n      .object({\n        data: z.array(zodSchemaEndpointDTO()),\n        links: z.record(z.string()),\n        meta: zodSchemaMeta(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaEndpointProperties() {\n    return z.unknown();\n  }\n\n  function zodSchemaEndpointPropertiesDTO() {\n    return z.unknown();\n  }\n\n  function zodSchemaEndpointStatus() {\n    return z.enum([\n      'READY',\n      'UNKNOWN',\n      'NEW',\n      'PROVISIONING',\n      'DELETING',\n      'FAILED',\n    ]);\n  }\n\n  function zodSchemaEndpointStatusDTO() {\n    return z.enum([\n      'DELETING',\n      'FAILED',\n      'NEW',\n      'PROVISIONING',\n      'READY',\n      'UNKNOWN',\n    ]);\n  }\n\n  function zodSchemaEndpointTestRequest() {\n    return z\n      .object({\n        message: z.string(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaEndpointType() {\n    return z.enum([\n      'ansible',\n      'camel',\n      'drawer',\n      'email_subscription',\n      'webhook',\n      'pagerduty',\n    ]);\n  }\n\n  function zodSchemaEndpointTypeDTO() {\n    return z.enum([\n      'ansible',\n      'camel',\n      'drawer',\n      'email_subscription',\n      'webhook',\n    ]);\n  }\n\n  function zodSchemaEnvironment() {\n    return z.enum(['PROD', 'STAGE', 'EPHEMERAL', 'LOCAL_SERVER']);\n  }\n\n  function zodSchemaEventLogEntry() {\n    return z\n      .object({\n        actions: z.array(zodSchemaEventLogEntryAction()),\n        application: z.string(),\n        bundle: z.string(),\n        created: zodSchemaLocalDateTime(),\n        event_type: z.string(),\n        id: zodSchemaUUID(),\n        payload: z.string().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaEventLogEntryAction() {\n    return z\n      .object({\n        details: z.record(z.unknown()).optional().nullable(),\n        endpoint_id: zodSchemaUUID().optional().nullable(),\n        endpoint_sub_type: z.string().optional().nullable(),\n        endpoint_type: zodSchemaEndpointType(),\n        id: zodSchemaUUID(),\n        status: zodSchemaEventLogEntryActionStatus(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaEventLogEntryActionStatus() {\n    return z.enum(['SENT', 'SUCCESS', 'PROCESSING', 'FAILED', 'UNKNOWN']);\n  }\n\n  function zodSchemaEventType() {\n    return z\n      .object({\n        application: zodSchemaApplication().optional().nullable(),\n        application_id: zodSchemaUUID(),\n        description: z.string().optional().nullable(),\n        display_name: z.string(),\n        fully_qualified_name: z.string().optional().nullable(),\n        id: zodSchemaUUID().optional().nullable(),\n        name: z.string(),\n        not_subscription_locked_or_subscribed_by_default: z\n          .boolean()\n          .optional()\n          .nullable(),\n        subscribed_by_default: z.boolean().optional().nullable(),\n        subscription_locked: z.boolean().optional().nullable(),\n        visible: z.boolean().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaEventTypeBehavior() {\n    return z\n      .object({\n        created: zodSchemaLocalDateTime().optional().nullable(),\n        event_type: zodSchemaEventType().optional().nullable(),\n        id: zodSchemaEventTypeBehaviorId().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaEventTypeBehaviorId() {\n    return z\n      .object({\n        behaviorGroupId: zodSchemaUUID(),\n        eventTypeId: zodSchemaUUID(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaEventTypeDTO() {\n    return z\n      .object({\n        application: z\n          .lazy(() => zodSchemaApplicationDTO())\n          .optional()\n          .nullable(),\n        description: z.string().optional().nullable(),\n        display_name: z.string(),\n        id: zodSchemaUUID().optional().nullable(),\n        name: z.string(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaEventTypeSettingsValue() {\n    return z\n      .object({\n        emailSubscriptionTypes: z.record(z.boolean()).optional().nullable(),\n        hasForcedEmail: z.boolean().optional().nullable(),\n        subscriptionLocked: z.boolean().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaEventsReplayRequest() {\n    return z\n      .object({\n        end_date: zodSchemaLocalDateTime(),\n        org_id: z.string().optional().nullable(),\n        start_date: zodSchemaLocalDateTime(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaFacet() {\n    return z\n      .object({\n        children: z\n          .array(z.lazy(() => zodSchemaFacet()))\n          .optional()\n          .nullable(),\n        displayName: z.string(),\n        id: z.string(),\n        name: z.string(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaHttpType() {\n    return z.enum(['GET', 'POST', 'PUT']);\n  }\n\n  function zodSchemaInstantEmailTemplate() {\n    return z\n      .object({\n        body_template: zodSchemaTemplate().optional().nullable(),\n        body_template_id: zodSchemaUUID(),\n        created: zodSchemaLocalDateTime().optional().nullable(),\n        event_type: zodSchemaEventType().optional().nullable(),\n        event_type_id: zodSchemaUUID().optional().nullable(),\n        id: zodSchemaUUID().optional().nullable(),\n        subject_template: zodSchemaTemplate().optional().nullable(),\n        subject_template_id: zodSchemaUUID(),\n        updated: zodSchemaLocalDateTime().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaInternalApplicationUserPermission() {\n    return z\n      .object({\n        application_display_name: z.string(),\n        application_id: zodSchemaUUID(),\n        role: z.string(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaInternalRoleAccess() {\n    return z\n      .object({\n        application_id: zodSchemaUUID(),\n        id: zodSchemaUUID().optional().nullable(),\n        role: z.string(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaInternalUserPermissions() {\n    return z\n      .object({\n        applications: z.array(zodSchemaApplication1()),\n        is_admin: z.boolean(),\n        roles: z.array(z.string()),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaLocalDate() {\n    return z.string();\n  }\n\n  function zodSchemaLocalDateTime() {\n    return z.string();\n  }\n\n  function zodSchemaLocalTime() {\n    return z.string();\n  }\n\n  function zodSchemaMessageValidationResponse() {\n    return z\n      .object({\n        errors: z.record(z.array(z.string())),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaMeta() {\n    return z\n      .object({\n        count: z.number().int(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaNotificationHistory() {\n    return z\n      .object({\n        created: zodSchemaLocalDateTime().optional().nullable(),\n        details: z.record(z.unknown()).optional().nullable(),\n        endpointId: zodSchemaUUID().optional().nullable(),\n        endpointSubType: z.string().optional().nullable(),\n        endpointType: zodSchemaEndpointType().optional().nullable(),\n        id: zodSchemaUUID().optional().nullable(),\n        invocationTime: z.number().int(),\n        status: zodSchemaNotificationStatus(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaNotificationStatus() {\n    return z.enum([\n      'FAILED_INTERNAL',\n      'FAILED_EXTERNAL',\n      'PROCESSING',\n      'SENT',\n      'SUCCESS',\n    ]);\n  }\n\n  function zodSchemaPageBehaviorGroup() {\n    return z\n      .object({\n        data: z.array(zodSchemaBehaviorGroup()),\n        links: z.record(z.string()),\n        meta: zodSchemaMeta(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaPageDrawerEntryPayload() {\n    return z\n      .object({\n        data: z.array(zodSchemaDrawerEntryPayload()),\n        links: z.record(z.string()),\n        meta: zodSchemaMeta(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaPageEventLogEntry() {\n    return z\n      .object({\n        data: z.array(zodSchemaEventLogEntry()),\n        links: z.record(z.string()),\n        meta: zodSchemaMeta(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaPageEventType() {\n    return z\n      .object({\n        data: z.array(zodSchemaEventType()),\n        links: z.record(z.string()),\n        meta: zodSchemaMeta(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaPageNotificationHistory() {\n    return z\n      .object({\n        data: z.array(zodSchemaNotificationHistory()),\n        links: z.record(z.string()),\n        meta: zodSchemaMeta(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaPagerDutyPropertiesDTO() {\n    return z\n      .object({\n        secretToken: z.string(),\n        severity: zodSchemaPagerDutySeverityDTO(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaPagerDutySeverity() {\n    return z.enum(['critical', 'error', 'warning', 'info']);\n  }\n\n  function zodSchemaPagerDutySeverityDTO() {\n    return z.enum(['critical', 'error', 'warning', 'info']);\n  }\n\n  function zodSchemaRenderEmailTemplateRequest() {\n    return z\n      .object({\n        payload: z.string(),\n        template: z.array(z.string()),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaRequestDefaultBehaviorGroupPropertyList() {\n    return z\n      .object({\n        ignore_preferences: z.boolean(),\n        only_admins: z.boolean(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaRequestSystemSubscriptionProperties() {\n    return z\n      .object({\n        group_id: zodSchemaUUID().optional().nullable(),\n        only_admins: z.boolean(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaServerInfo() {\n    return z\n      .object({\n        environment: zodSchemaEnvironment().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaSettingsValuesByEventType() {\n    return z\n      .object({\n        bundles: z.record(zodSchemaBundleSettingsValue()).optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaStatus() {\n    return z.enum(['UP', 'MAINTENANCE']);\n  }\n\n  function zodSchemaSubscriptionType() {\n    return z.enum(['INSTANT', 'DAILY', 'DRAWER']);\n  }\n\n  function zodSchemaSystemSubscriptionPropertiesDTO() {\n    return z\n      .object({\n        groupId: zodSchemaUUID().optional().nullable(),\n        ignorePreferences: z.boolean().optional().nullable(),\n        onlyAdmins: z.boolean().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaTemplate() {\n    return z\n      .object({\n        created: zodSchemaLocalDateTime().optional().nullable(),\n        data: z.string(),\n        description: z.string(),\n        id: zodSchemaUUID().optional().nullable(),\n        name: z.string(),\n        updated: zodSchemaLocalDateTime().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaTriggerDailyDigestRequest() {\n    return z\n      .object({\n        application_name: z.string(),\n        bundle_name: z.string(),\n        end: zodSchemaLocalDateTime().optional().nullable(),\n        org_id: z.string(),\n        start: zodSchemaLocalDateTime().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaUUID() {\n    return z.string();\n  }\n\n  function zodSchemaUpdateApplicationRequest() {\n    return z\n      .object({\n        display_name: z.string().optional().nullable(),\n        name: z.string().optional().nullable(),\n        owner_role: z.string().optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaUpdateBehaviorGroupRequest() {\n    return z\n      .object({\n        display_name: z.string().optional().nullable(),\n        display_name_not_null_and_blank: z.boolean().optional().nullable(),\n        endpoint_ids: z.array(z.string()).optional().nullable(),\n        event_type_ids: z.array(z.string()).optional().nullable(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaUpdateNotificationDrawerStatus() {\n    return z\n      .object({\n        notification_ids: z.array(z.string()),\n        read_status: z.boolean(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaWebhookPropertiesDTO() {\n    return z\n      .object({\n        basicAuthentication: zodSchemaBasicAuthenticationDTO()\n          .optional()\n          .nullable(),\n        bearerAuthentication: z.string().optional().nullable(),\n        disableSslVerification: z.boolean(),\n        method: zodSchemaHttpType(),\n        secretToken: z.string().optional().nullable(),\n        url: z.string(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchemaX509Certificate() {\n    return z\n      .object({\n        application: z.string(),\n        bundle: z.string(),\n        id: zodSchemaUUID().optional().nullable(),\n        source_environment: z.string(),\n        subject_dn: z.string(),\n      })\n      .nonstrict();\n  }\n\n  function zodSchema__Empty() {\n    return z.string().max(0).optional();\n  }\n}\n\nexport module Operations {\n  // POST /notifications/behaviorGroups\n  // Create a behavior group\n  export module NotificationResource$v1CreateBehaviorGroup {\n    const Response400 = z.string();\n    type Response400 = string;\n    export interface Params {\n      body: Schemas.CreateBehaviorGroupRequest;\n    }\n\n    export type Payload =\n      | ValidatedResponse<\n          'CreateBehaviorGroupResponse',\n          200,\n          Schemas.CreateBehaviorGroupResponse\n        >\n      | ValidatedResponse<'unknown', 400, Response400>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path = '/api/notifications/v1.0/notifications/behaviorGroups';\n      const query = {} as Record<string, any>;\n      return actionBuilder('POST', path)\n        .queryParams(query)\n        .data(params.body)\n        .config({\n          rules: [\n            new ValidateRule(\n              Schemas.CreateBehaviorGroupResponse,\n              'CreateBehaviorGroupResponse',\n              200\n            ),\n            new ValidateRule(Response400, 'unknown', 400),\n          ],\n        })\n        .build();\n    };\n  }\n  // GET /notifications/behaviorGroups/affectedByRemovalOfEndpoint/{endpointId}\n  // List the behavior groups affected by the removal of an endpoint\n  export module NotificationResource$v1GetBehaviorGroupsAffectedByRemovalOfEndpoint {\n    const Response200 = z.array(Schemas.BehaviorGroup);\n    type Response200 = Array<Schemas.BehaviorGroup>;\n    export interface Params {\n      endpointId: Schemas.UUID;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'unknown', 200, Response200>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path =\n        '/api/notifications/v1.0/notifications/behaviorGroups/affectedByRemovalOfEndpoint/{endpointId}'.replace(\n          '{endpointId}',\n          params['endpointId'].toString()\n        );\n      const query = {} as Record<string, any>;\n      return actionBuilder('GET', path)\n        .queryParams(query)\n        .config({\n          rules: [new ValidateRule(Response200, 'unknown', 200)],\n        })\n        .build();\n    };\n  }\n  // PUT /notifications/behaviorGroups/{behaviorGroupId}/actions\n  // Update the list of behavior group actions\n  export module NotificationResource$v1UpdateBehaviorGroupActions {\n    const Body = z.array(z.string());\n    type Body = Array<string>;\n    const Response200 = z.string();\n    type Response200 = string;\n    export interface Params {\n      behaviorGroupId: Schemas.UUID;\n      body: Body;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'unknown', 200, Response200>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path =\n        '/api/notifications/v1.0/notifications/behaviorGroups/{behaviorGroupId}/actions'.replace(\n          '{behaviorGroupId}',\n          params['behaviorGroupId'].toString()\n        );\n      const query = {} as Record<string, any>;\n      return actionBuilder('PUT', path)\n        .queryParams(query)\n        .data(params.body)\n        .config({\n          rules: [new ValidateRule(Response200, 'unknown', 200)],\n        })\n        .build();\n    };\n  }\n  // PUT /notifications/behaviorGroups/{id}\n  // Update a behavior group\n  export module NotificationResource$v1UpdateBehaviorGroup {\n    const Response200 = z.boolean();\n    type Response200 = boolean;\n    const Response400 = z.string();\n    type Response400 = string;\n    const Response404 = z.string();\n    type Response404 = string;\n    export interface Params {\n      id: Schemas.UUID;\n      body: Schemas.UpdateBehaviorGroupRequest;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'unknown', 200, Response200>\n      | ValidatedResponse<'unknown', 400, Response400>\n      | ValidatedResponse<'unknown', 404, Response404>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path =\n        '/api/notifications/v1.0/notifications/behaviorGroups/{id}'.replace(\n          '{id}',\n          params['id'].toString()\n        );\n      const query = {} as Record<string, any>;\n      return actionBuilder('PUT', path)\n        .queryParams(query)\n        .data(params.body)\n        .config({\n          rules: [\n            new ValidateRule(Response200, 'unknown', 200),\n            new ValidateRule(Response400, 'unknown', 400),\n            new ValidateRule(Response404, 'unknown', 404),\n          ],\n        })\n        .build();\n    };\n  }\n  // DELETE /notifications/behaviorGroups/{id}\n  // Delete a behavior group\n  export module NotificationResource$v1DeleteBehaviorGroup {\n    const Response200 = z.boolean();\n    type Response200 = boolean;\n    export interface Params {\n      id: Schemas.UUID;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'unknown', 200, Response200>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path =\n        '/api/notifications/v1.0/notifications/behaviorGroups/{id}'.replace(\n          '{id}',\n          params['id'].toString()\n        );\n      const query = {} as Record<string, any>;\n      return actionBuilder('DELETE', path)\n        .queryParams(query)\n        .config({\n          rules: [new ValidateRule(Response200, 'unknown', 200)],\n        })\n        .build();\n    };\n  }\n  // GET /notifications/bundles/{bundleId}/behaviorGroups\n  // List behavior groups in a bundle\n  export module NotificationResource$v1FindBehaviorGroupsByBundleId {\n    const Response200 = z.array(Schemas.BehaviorGroup);\n    type Response200 = Array<Schemas.BehaviorGroup>;\n    export interface Params {\n      bundleId: Schemas.UUID;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'unknown', 200, Response200>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path =\n        '/api/notifications/v1.0/notifications/bundles/{bundleId}/behaviorGroups'.replace(\n          '{bundleId}',\n          params['bundleId'].toString()\n        );\n      const query = {} as Record<string, any>;\n      return actionBuilder('GET', path)\n        .queryParams(query)\n        .config({\n          rules: [new ValidateRule(Response200, 'unknown', 200)],\n        })\n        .build();\n    };\n  }\n  // GET /notifications/bundles/{bundleName}\n  // Retrieve a bundle by name\n  export module NotificationResource$v1GetBundleByName {\n    const BundleName = z.string();\n    type BundleName = string;\n    export interface Params {\n      bundleName: BundleName;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'Bundle', 200, Schemas.Bundle>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path =\n        '/api/notifications/v1.0/notifications/bundles/{bundleName}'.replace(\n          '{bundleName}',\n          params['bundleName'].toString()\n        );\n      const query = {} as Record<string, any>;\n      return actionBuilder('GET', path)\n        .queryParams(query)\n        .config({\n          rules: [new ValidateRule(Schemas.Bundle, 'Bundle', 200)],\n        })\n        .build();\n    };\n  }\n  // GET /notifications/bundles/{bundleName}/applications/{applicationName}\n  // Retrieve an application by bundle and application names\n  export module NotificationResource$v1GetApplicationByNameAndBundleName {\n    const ApplicationName = z.string();\n    type ApplicationName = string;\n    const BundleName = z.string();\n    type BundleName = string;\n    export interface Params {\n      applicationName: ApplicationName;\n      bundleName: BundleName;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'Application', 200, Schemas.Application>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path =\n        '/api/notifications/v1.0/notifications/bundles/{bundleName}/applications/{applicationName}'\n          .replace('{applicationName}', params['applicationName'].toString())\n          .replace('{bundleName}', params['bundleName'].toString());\n      const query = {} as Record<string, any>;\n      return actionBuilder('GET', path)\n        .queryParams(query)\n        .config({\n          rules: [new ValidateRule(Schemas.Application, 'Application', 200)],\n        })\n        .build();\n    };\n  }\n  // GET /notifications/bundles/{bundleName}/applications/{applicationName}/eventTypes/{eventTypeName}\n  // Retrieve an event type by bundle, application and event type names\n  export module NotificationResource$v1GetEventTypesByNameAndBundleAndApplicationName {\n    const ApplicationName = z.string();\n    type ApplicationName = string;\n    const BundleName = z.string();\n    type BundleName = string;\n    const EventTypeName = z.string();\n    type EventTypeName = string;\n    export interface Params {\n      applicationName: ApplicationName;\n      bundleName: BundleName;\n      eventTypeName: EventTypeName;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'EventType', 200, Schemas.EventType>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path =\n        '/api/notifications/v1.0/notifications/bundles/{bundleName}/applications/{applicationName}/eventTypes/{eventTypeName}'\n          .replace('{applicationName}', params['applicationName'].toString())\n          .replace('{bundleName}', params['bundleName'].toString())\n          .replace('{eventTypeName}', params['eventTypeName'].toString());\n      const query = {} as Record<string, any>;\n      return actionBuilder('GET', path)\n        .queryParams(query)\n        .config({\n          rules: [new ValidateRule(Schemas.EventType, 'EventType', 200)],\n        })\n        .build();\n    };\n  }\n  // GET /notifications/drawer\n  // Retrieve drawer notifications entries.\n  export module DrawerResource$v1GetDrawerEntries {\n    const AppIds = z.array(z.string());\n    type AppIds = Array<string>;\n    const BundleIds = z.array(z.string());\n    type BundleIds = Array<string>;\n    const EventTypeIds = z.array(z.string());\n    type EventTypeIds = Array<string>;\n    const Limit = z.number().int();\n    type Limit = number;\n    const Offset = z.number().int();\n    type Offset = number;\n    const PageNumber = z.number().int();\n    type PageNumber = number;\n    const ReadStatus = z.boolean();\n    type ReadStatus = boolean;\n    const SortBy = z.string();\n    type SortBy = string;\n    export interface Params {\n      appIds?: AppIds;\n      bundleIds?: BundleIds;\n      endDate?: Schemas.LocalDateTime;\n      eventTypeIds?: EventTypeIds;\n      limit?: Limit;\n      offset?: Offset;\n      pageNumber?: PageNumber;\n      readStatus?: ReadStatus;\n      sortBy?: SortBy;\n      startDate?: Schemas.LocalDateTime;\n    }\n\n    export type Payload =\n      | ValidatedResponse<\n          'PageDrawerEntryPayload',\n          200,\n          Schemas.PageDrawerEntryPayload\n        >\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path = '/api/notifications/v1.0/notifications/drawer';\n      const query = {} as Record<string, any>;\n      if (params['appIds'] !== undefined) {\n        query['appIds'] = params['appIds'];\n      }\n\n      if (params['bundleIds'] !== undefined) {\n        query['bundleIds'] = params['bundleIds'];\n      }\n\n      if (params['endDate'] !== undefined) {\n        query['endDate'] = params['endDate'];\n      }\n\n      if (params['eventTypeIds'] !== undefined) {\n        query['eventTypeIds'] = params['eventTypeIds'];\n      }\n\n      if (params['limit'] !== undefined) {\n        query['limit'] = params['limit'];\n      }\n\n      if (params['offset'] !== undefined) {\n        query['offset'] = params['offset'];\n      }\n\n      if (params['pageNumber'] !== undefined) {\n        query['pageNumber'] = params['pageNumber'];\n      }\n\n      if (params['readStatus'] !== undefined) {\n        query['readStatus'] = params['readStatus'];\n      }\n\n      if (params['sortBy'] !== undefined) {\n        query['sort_by'] = params['sortBy'];\n      }\n\n      if (params['startDate'] !== undefined) {\n        query['startDate'] = params['startDate'];\n      }\n\n      return actionBuilder('GET', path)\n        .queryParams(query)\n        .config({\n          rules: [\n            new ValidateRule(\n              Schemas.PageDrawerEntryPayload,\n              'PageDrawerEntryPayload',\n              200\n            ),\n          ],\n        })\n        .build();\n    };\n  }\n  // PUT /notifications/drawer/read\n  // Update drawer notifications status.\n  export module DrawerResource$v1UpdateNotificationReadStatus {\n    const Response200 = z.number().int();\n    type Response200 = number;\n    export interface Params {\n      body: Schemas.UpdateNotificationDrawerStatus;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'unknown', 200, Response200>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path = '/api/notifications/v1.0/notifications/drawer/read';\n      const query = {} as Record<string, any>;\n      return actionBuilder('PUT', path)\n        .queryParams(query)\n        .data(params.body)\n        .config({\n          rules: [new ValidateRule(Response200, 'unknown', 200)],\n        })\n        .build();\n    };\n  }\n  // GET /notifications/eventTypes\n  // List all event types\n  export module NotificationResource$v1GetEventTypes {\n    const ApplicationIds = z.array(z.string());\n    type ApplicationIds = Array<string>;\n    const EventTypeName = z.string();\n    type EventTypeName = string;\n    const ExcludeMutedTypes = z.boolean();\n    type ExcludeMutedTypes = boolean;\n    const Limit = z.number().int();\n    type Limit = number;\n    const Offset = z.number().int();\n    type Offset = number;\n    const PageNumber = z.number().int();\n    type PageNumber = number;\n    const SortBy = z.string();\n    type SortBy = string;\n    export interface Params {\n      applicationIds?: ApplicationIds;\n      bundleId?: Schemas.UUID;\n      eventTypeName?: EventTypeName;\n      excludeMutedTypes?: ExcludeMutedTypes;\n      limit?: Limit;\n      offset?: Offset;\n      pageNumber?: PageNumber;\n      sortBy?: SortBy;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'PageEventType', 200, Schemas.PageEventType>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path = '/api/notifications/v1.0/notifications/eventTypes';\n      const query = {} as Record<string, any>;\n      if (params['applicationIds'] !== undefined) {\n        query['applicationIds'] = params['applicationIds'];\n      }\n\n      if (params['bundleId'] !== undefined) {\n        query['bundleId'] = params['bundleId'];\n      }\n\n      if (params['eventTypeName'] !== undefined) {\n        query['eventTypeName'] = params['eventTypeName'];\n      }\n\n      if (params['excludeMutedTypes'] !== undefined) {\n        query['excludeMutedTypes'] = params['excludeMutedTypes'];\n      }\n\n      if (params['limit'] !== undefined) {\n        query['limit'] = params['limit'];\n      }\n\n      if (params['offset'] !== undefined) {\n        query['offset'] = params['offset'];\n      }\n\n      if (params['pageNumber'] !== undefined) {\n        query['pageNumber'] = params['pageNumber'];\n      }\n\n      if (params['sortBy'] !== undefined) {\n        query['sort_by'] = params['sortBy'];\n      }\n\n      return actionBuilder('GET', path)\n        .queryParams(query)\n        .config({\n          rules: [\n            new ValidateRule(Schemas.PageEventType, 'PageEventType', 200),\n          ],\n        })\n        .build();\n    };\n  }\n  // GET /notifications/eventTypes/affectedByRemovalOfBehaviorGroup/{behaviorGroupId}\n  // List the event types affected by the removal of a behavior group\n  export module NotificationResource$v1GetEventTypesAffectedByRemovalOfBehaviorGroup {\n    const Response200 = z.array(Schemas.EventType);\n    type Response200 = Array<Schemas.EventType>;\n    export interface Params {\n      behaviorGroupId: Schemas.UUID;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'unknown', 200, Response200>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path =\n        '/api/notifications/v1.0/notifications/eventTypes/affectedByRemovalOfBehaviorGroup/{behaviorGroupId}'.replace(\n          '{behaviorGroupId}',\n          params['behaviorGroupId'].toString()\n        );\n      const query = {} as Record<string, any>;\n      return actionBuilder('GET', path)\n        .queryParams(query)\n        .config({\n          rules: [new ValidateRule(Response200, 'unknown', 200)],\n        })\n        .build();\n    };\n  }\n  // GET /notifications/eventTypes/{eventTypeId}/behaviorGroups\n  // List the behavior groups linked to an event type\n  export module NotificationResource$v1GetLinkedBehaviorGroups {\n    const Limit = z.number().int();\n    type Limit = number;\n    const Offset = z.number().int();\n    type Offset = number;\n    const PageNumber = z.number().int();\n    type PageNumber = number;\n    const SortBy = z.string();\n    type SortBy = string;\n    const Response200 = z.array(Schemas.BehaviorGroup);\n    type Response200 = Array<Schemas.BehaviorGroup>;\n    export interface Params {\n      eventTypeId: Schemas.UUID;\n      limit?: Limit;\n      offset?: Offset;\n      pageNumber?: PageNumber;\n      sortBy?: SortBy;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'unknown', 200, Response200>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path =\n        '/api/notifications/v1.0/notifications/eventTypes/{eventTypeId}/behaviorGroups'.replace(\n          '{eventTypeId}',\n          params['eventTypeId'].toString()\n        );\n      const query = {} as Record<string, any>;\n      if (params['limit'] !== undefined) {\n        query['limit'] = params['limit'];\n      }\n\n      if (params['offset'] !== undefined) {\n        query['offset'] = params['offset'];\n      }\n\n      if (params['pageNumber'] !== undefined) {\n        query['pageNumber'] = params['pageNumber'];\n      }\n\n      if (params['sortBy'] !== undefined) {\n        query['sort_by'] = params['sortBy'];\n      }\n\n      return actionBuilder('GET', path)\n        .queryParams(query)\n        .config({\n          rules: [new ValidateRule(Response200, 'unknown', 200)],\n        })\n        .build();\n    };\n  }\n  // PUT /notifications/eventTypes/{eventTypeId}/behaviorGroups\n  // Update the list of behavior groups for an event type\n  export module NotificationResource$v1UpdateEventTypeBehaviors {\n    const Body = z.array(z.string());\n    type Body = Array<string>;\n    const Response200 = z.string();\n    type Response200 = string;\n    export interface Params {\n      eventTypeId: Schemas.UUID;\n      body: Body;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'unknown', 200, Response200>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path =\n        '/api/notifications/v1.0/notifications/eventTypes/{eventTypeId}/behaviorGroups'.replace(\n          '{eventTypeId}',\n          params['eventTypeId'].toString()\n        );\n      const query = {} as Record<string, any>;\n      return actionBuilder('PUT', path)\n        .queryParams(query)\n        .data(params.body)\n        .config({\n          rules: [new ValidateRule(Response200, 'unknown', 200)],\n        })\n        .build();\n    };\n  }\n  // DELETE /notifications/eventTypes/{eventTypeId}/behaviorGroups/{behaviorGroupId}\n  // Delete a behavior group from an event type\n  export module NotificationResource$v1DeleteBehaviorGroupFromEventType {\n    export interface Params {\n      behaviorGroupId: Schemas.UUID;\n      eventTypeId: Schemas.UUID;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'__Empty', 204, Schemas.__Empty>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path =\n        '/api/notifications/v1.0/notifications/eventTypes/{eventTypeId}/behaviorGroups/{behaviorGroupId}'\n          .replace('{behaviorGroupId}', params['behaviorGroupId'].toString())\n          .replace('{eventTypeId}', params['eventTypeId'].toString());\n      const query = {} as Record<string, any>;\n      return actionBuilder('DELETE', path)\n        .queryParams(query)\n        .config({\n          rules: [new ValidateRule(Schemas.__Empty, '__Empty', 204)],\n        })\n        .build();\n    };\n  }\n  // PUT /notifications/eventTypes/{eventTypeUuid}/behaviorGroups/{behaviorGroupUuid}\n  // Add a behavior group to the given event type.\n  export module NotificationResource$v1AppendBehaviorGroupToEventType {\n    export interface Params {\n      behaviorGroupUuid: Schemas.UUID;\n      eventTypeUuid: Schemas.UUID;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'__Empty', 204, Schemas.__Empty>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path =\n        '/api/notifications/v1.0/notifications/eventTypes/{eventTypeUuid}/behaviorGroups/{behaviorGroupUuid}'\n          .replace(\n            '{behaviorGroupUuid}',\n            params['behaviorGroupUuid'].toString()\n          )\n          .replace('{eventTypeUuid}', params['eventTypeUuid'].toString());\n      const query = {} as Record<string, any>;\n      return actionBuilder('PUT', path)\n        .queryParams(query)\n        .config({\n          rules: [new ValidateRule(Schemas.__Empty, '__Empty', 204)],\n        })\n        .build();\n    };\n  }\n  // GET /notifications/events\n  // Retrieve the event log entries\n  export module EventResource$v1GetEvents {\n    const AppIds = z.array(z.string());\n    type AppIds = Array<string>;\n    const BundleIds = z.array(z.string());\n    type BundleIds = Array<string>;\n    const EndpointTypes = z.array(z.string());\n    type EndpointTypes = Array<string>;\n    const EventTypeDisplayName = z.string();\n    type EventTypeDisplayName = string;\n    const IncludeActions = z.boolean();\n    type IncludeActions = boolean;\n    const IncludeDetails = z.boolean();\n    type IncludeDetails = boolean;\n    const IncludePayload = z.boolean();\n    type IncludePayload = boolean;\n    const InvocationResults = z.array(z.boolean());\n    type InvocationResults = Array<boolean>;\n    const Limit = z.number().int();\n    type Limit = number;\n    const Offset = z.number().int();\n    type Offset = number;\n    const PageNumber = z.number().int();\n    type PageNumber = number;\n    const SortBy = z.string();\n    type SortBy = string;\n    const Status = z.array(Schemas.EventLogEntryActionStatus);\n    type Status = Array<Schemas.EventLogEntryActionStatus>;\n    export interface Params {\n      appIds?: AppIds;\n      bundleIds?: BundleIds;\n      endDate?: Schemas.LocalDate;\n      endpointTypes?: EndpointTypes;\n      eventTypeDisplayName?: EventTypeDisplayName;\n      includeActions?: IncludeActions;\n      includeDetails?: IncludeDetails;\n      includePayload?: IncludePayload;\n      invocationResults?: InvocationResults;\n      limit?: Limit;\n      offset?: Offset;\n      pageNumber?: PageNumber;\n      sortBy?: SortBy;\n      startDate?: Schemas.LocalDate;\n      status?: Status;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'PageEventLogEntry', 200, Schemas.PageEventLogEntry>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path = '/api/notifications/v1.0/notifications/events';\n      const query = {} as Record<string, any>;\n      if (params['appIds'] !== undefined) {\n        query['appIds'] = params['appIds'];\n      }\n\n      if (params['bundleIds'] !== undefined) {\n        query['bundleIds'] = params['bundleIds'];\n      }\n\n      if (params['endDate'] !== undefined) {\n        query['endDate'] = params['endDate'];\n      }\n\n      if (params['endpointTypes'] !== undefined) {\n        query['endpointTypes'] = params['endpointTypes'];\n      }\n\n      if (params['eventTypeDisplayName'] !== undefined) {\n        query['eventTypeDisplayName'] = params['eventTypeDisplayName'];\n      }\n\n      if (params['includeActions'] !== undefined) {\n        query['includeActions'] = params['includeActions'];\n      }\n\n      if (params['includeDetails'] !== undefined) {\n        query['includeDetails'] = params['includeDetails'];\n      }\n\n      if (params['includePayload'] !== undefined) {\n        query['includePayload'] = params['includePayload'];\n      }\n\n      if (params['invocationResults'] !== undefined) {\n        query['invocationResults'] = params['invocationResults'];\n      }\n\n      if (params['limit'] !== undefined) {\n        query['limit'] = params['limit'];\n      }\n\n      if (params['offset'] !== undefined) {\n        query['offset'] = params['offset'];\n      }\n\n      if (params['pageNumber'] !== undefined) {\n        query['pageNumber'] = params['pageNumber'];\n      }\n\n      if (params['sortBy'] !== undefined) {\n        query['sort_by'] = params['sortBy'];\n      }\n\n      if (params['startDate'] !== undefined) {\n        query['startDate'] = params['startDate'];\n      }\n\n      if (params['status'] !== undefined) {\n        query['status'] = params['status'];\n      }\n\n      return actionBuilder('GET', path)\n        .queryParams(query)\n        .config({\n          rules: [\n            new ValidateRule(\n              Schemas.PageEventLogEntry,\n              'PageEventLogEntry',\n              200\n            ),\n          ],\n        })\n        .build();\n    };\n  }\n  // GET /notifications/facets/applications\n  // List configured applications\n  export module NotificationResource$v1GetApplicationsFacets {\n    const BundleName = z.string();\n    type BundleName = string;\n    const Response200 = z.array(Schemas.Facet);\n    type Response200 = Array<Schemas.Facet>;\n    export interface Params {\n      bundleName?: BundleName;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'unknown', 200, Response200>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path = '/api/notifications/v1.0/notifications/facets/applications';\n      const query = {} as Record<string, any>;\n      if (params['bundleName'] !== undefined) {\n        query['bundleName'] = params['bundleName'];\n      }\n\n      return actionBuilder('GET', path)\n        .queryParams(query)\n        .config({\n          rules: [new ValidateRule(Response200, 'unknown', 200)],\n        })\n        .build();\n    };\n  }\n  // GET /notifications/facets/bundles\n  // List configured bundles\n  export module NotificationResource$v1GetBundleFacets {\n    const IncludeApplications = z.boolean();\n    type IncludeApplications = boolean;\n    const Response200 = z.array(Schemas.Facet);\n    type Response200 = Array<Schemas.Facet>;\n    export interface Params {\n      includeApplications?: IncludeApplications;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'unknown', 200, Response200>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path = '/api/notifications/v1.0/notifications/facets/bundles';\n      const query = {} as Record<string, any>;\n      if (params['includeApplications'] !== undefined) {\n        query['includeApplications'] = params['includeApplications'];\n      }\n\n      return actionBuilder('GET', path)\n        .queryParams(query)\n        .config({\n          rules: [new ValidateRule(Response200, 'unknown', 200)],\n        })\n        .build();\n    };\n  }\n  // GET /org-config/daily-digest/time-preference\n  // Retrieve the daily digest time\n  export module OrgConfigResource$v1GetDailyDigestTimePreference {\n    const Response200 = z.string();\n    type Response200 = string;\n    export type Payload =\n      | ValidatedResponse<'unknown', 200, Response200>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (): ActionCreator => {\n      const path =\n        '/api/notifications/v1.0/org-config/daily-digest/time-preference';\n      const query = {} as Record<string, any>;\n      return actionBuilder('GET', path)\n        .queryParams(query)\n        .config({\n          rules: [new ValidateRule(Response200, 'unknown', 200)],\n        })\n        .build();\n    };\n  }\n  // PUT /org-config/daily-digest/time-preference\n  // Set the daily digest time\n  export module OrgConfigResource$v1SaveDailyDigestTimePreference {\n    export interface Params {\n      body: Schemas.LocalTime;\n    }\n\n    export type Payload =\n      | ValidatedResponse<'__Empty', 204, Schemas.__Empty>\n      | ValidatedResponse<'__Empty', 400, Schemas.__Empty>\n      | ValidatedResponse<'unknown', undefined, unknown>;\n    export type ActionCreator = Action<Payload, ActionValidatableConfig>;\n    export const actionCreator = (params: Params): ActionCreator => {\n      const path =\n        '/api/notifications/v1.0/org-config/daily-digest/time-preference';\n      const query = {} as Record<string, any>;\n      return actionBuilder('PUT', path)\n        .queryParams(query)\n        .data(params.body)\n        .config({\n          rules: [\n            new ValidateRule(Schemas.__Empty, '__Empty', 204),\n            new ValidateRule(Schemas.__Empty, '__Empty', 400),\n          ],\n        })\n        .build();\n    };\n  }\n}\n"],"names":["Schemas","Operations","zodSchemaApplication","bundle_id","zodSchemaUUID","created","zodSchemaLocalDateTime","optional","nullable","display_name","id","name","updated","nonstrict","zodSchemaApplication1","zodSchemaApplicationDTO","event_types","zodSchemaEventTypeDTO","zodSchemaApplicationSettingsValue","eventTypes","zodSchemaEventTypeSettingsValue","zodSchemaBasicAuthenticationDTO","password","username","zodSchemaBehaviorGroup","actions","zodSchemaBehaviorGroupAction","behaviors","zodSchemaEventTypeBehavior","bundle","zodSchemaBundle","default_behavior","endpoint","zodSchemaEndpoint","zodSchemaBehaviorGroupActionId","behaviorGroupId","endpointId","zodSchemaBundleDTO","applications","zodSchemaBundleSettingsValue","zodSchemaCamelPropertiesDTO","basicAuthentication","disableSslVerification","extras","secretToken","url","zodSchemaDrawerEntryPayload","description","read","source","title","enabled","properties","zodSchemaEndpointProperties","server_errors","int","status","zodSchemaEndpointStatus","sub_type","type","zodSchemaEndpointType","zodSchemaEndpointDTO","event_types_group_by_bundles_and_applications","zodSchemaSystemSubscriptionPropertiesDTO","zodSchemaWebhookPropertiesDTO","zodSchemaPagerDutyPropertiesDTO","zodSchemaEndpointStatusDTO","zodSchemaEndpointTypeDTO","zodSchemaEnvironment","zodSchemaEventLogEntry","zodSchemaEventLogEntryAction","application","event_type","payload","details","endpoint_id","endpoint_sub_type","endpoint_type","zodSchemaEventLogEntryActionStatus","zodSchemaEventType","application_id","fully_qualified_name","not_subscription_locked_or_subscribed_by_default","subscribed_by_default","subscription_locked","visible","zodSchemaEventTypeBehaviorId","eventTypeId","emailSubscriptionTypes","hasForcedEmail","subscriptionLocked","zodSchemaHttpType","zodSchemaMeta","count","zodSchemaNotificationHistory","endpointSubType","endpointType","invocationTime","zodSchemaNotificationStatus","severity","zodSchemaPagerDutySeverityDTO","zodSchemaStatus","zodSchemaSubscriptionType","groupId","ignorePreferences","onlyAdmins","zodSchemaTemplate","data","bearerAuthentication","method","AddAccessRequest","role","AddApplicationRequest","owner_role","AggregationEmailTemplate","body_template","body_template_id","subject_template","subject_template_id","subscription_type","Application","Application1","ApplicationDTO","ApplicationDTO1","ApplicationSettingsValue","BasicAuthenticationDTO","BehaviorGroup","BehaviorGroupAction","BehaviorGroupActionId","Bundle","BundleDTO","BundleSettingsValue","CamelPropertiesDTO","CreateBehaviorGroupRequest","bundle_name","bundle_uuid_or_bundle_name_valid","endpoint_ids","event_type_ids","CreateBehaviorGroupResponse","endpoints","CurrentStatus","end_time","start_time","DrawerEntryPayload","Endpoint","EndpointDTO","EndpointPage","links","meta","EndpointProperties","EndpointPropertiesDTO","EndpointStatus","EndpointStatusDTO","EndpointTestRequest","message","EndpointType","EndpointTypeDTO","Environment","EventLogEntry","EventLogEntryAction","EventLogEntryActionStatus","EventType","EventTypeBehavior","EventTypeBehaviorId","EventTypeDTO","EventTypeSettingsValue","EventsReplayRequest","end_date","org_id","start_date","Facet","zodSchemaFacet","children","displayName","HttpType","InstantEmailTemplate","event_type_id","InternalApplicationUserPermission","application_display_name","InternalRoleAccess","InternalUserPermissions","is_admin","roles","LocalDate","LocalDateTime","LocalTime","MessageValidationResponse","errors","Meta","NotificationHistory","NotificationStatus","PageBehaviorGroup","PageDrawerEntryPayload","PageEventLogEntry","PageEventType","PageNotificationHistory","PagerDutyPropertiesDTO","PagerDutySeverity","PagerDutySeverityDTO","RenderEmailTemplateRequest","template","RequestDefaultBehaviorGroupPropertyList","ignore_preferences","only_admins","RequestSystemSubscriptionProperties","group_id","ServerInfo","environment","SettingsValuesByEventType","bundles","Status","SubscriptionType","SystemSubscriptionPropertiesDTO","Template","TriggerDailyDigestRequest","application_name","end","start","UUID","UpdateApplicationRequest","UpdateBehaviorGroupRequest","display_name_not_null_and_blank","UpdateNotificationDrawerStatus","notification_ids","read_status","WebhookPropertiesDTO","X509Certificate","source_environment","subject_dn","__Empty","max","NotificationResource$v1CreateBehaviorGroup","NotificationResource$v1GetBehaviorGroupsAffectedByRemovalOfEndpoint","NotificationResource$v1UpdateBehaviorGroupActions","NotificationResource$v1UpdateBehaviorGroup","NotificationResource$v1DeleteBehaviorGroup","NotificationResource$v1FindBehaviorGroupsByBundleId","NotificationResource$v1GetBundleByName","NotificationResource$v1GetApplicationByNameAndBundleName","NotificationResource$v1GetEventTypesByNameAndBundleAndApplicationName","DrawerResource$v1GetDrawerEntries","DrawerResource$v1UpdateNotificationReadStatus","NotificationResource$v1GetEventTypes","NotificationResource$v1GetEventTypesAffectedByRemovalOfBehaviorGroup","NotificationResource$v1GetLinkedBehaviorGroups","NotificationResource$v1UpdateEventTypeBehaviors","NotificationResource$v1DeleteBehaviorGroupFromEventType","NotificationResource$v1AppendBehaviorGroupToEventType","EventResource$v1GetEvents","NotificationResource$v1GetApplicationsFacets","NotificationResource$v1GetBundleFacets","OrgConfigResource$v1GetDailyDigestTimePreference","OrgConfigResource$v1SaveDailyDigestTimePreference","Response400","actionCreator","params","actionBuilder","queryParams","body","config","rules","ValidateRule","build","Response200","path","replace","toString","Response404","query","undefined"],"sourceRoot":""}